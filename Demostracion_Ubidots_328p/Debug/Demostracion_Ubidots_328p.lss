
Demostracion_Ubidots_328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000650  00800100  0000193a  000019ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000193a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800750  00800750  0000201e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000201e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000207c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000020bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002294  00000000  00000000  0000224c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d4c  00000000  00000000  000044e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e11  00000000  00000000  0000522c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005e0  00000000  00000000  00006040  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008a0  00000000  00000000  00006620  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018e6  00000000  00000000  00006ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  000087a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5d 01 	jmp	0x2ba	; 0x2ba <__ctors_end>
       4:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
       8:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
       c:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      10:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      14:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      18:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      1c:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      20:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      24:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__vector_9>
      28:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      2c:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      30:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      34:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      38:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      3c:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      40:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      44:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      48:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      4c:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      50:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      54:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      58:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      5c:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      60:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>
      64:	0c 94 7a 01 	jmp	0x2f4	; 0x2f4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	45 72       	andi	r20, 0x25	; 37
      6a:	72 6f       	ori	r23, 0xF2	; 242
      6c:	72 20       	and	r7, r2
      6e:	65 6e       	ori	r22, 0xE5	; 229
      70:	20 73       	andi	r18, 0x30	; 48
      72:	6f 6c       	ori	r22, 0xCF	; 207
      74:	69 63       	ori	r22, 0x39	; 57
      76:	69 74       	andi	r22, 0x49	; 73
      78:	75 64       	ori	r23, 0x45	; 69
      7a:	20 64       	ori	r18, 0x40	; 64
      7c:	65 20       	and	r6, r5
      7e:	6c 65       	ori	r22, 0x5C	; 92
      80:	63 74       	andi	r22, 0x43	; 67
      82:	75 72       	andi	r23, 0x25	; 37
      84:	61 2e       	mov	r6, r17
      86:	2e 2e       	mov	r2, r30
      88:	0d 0a       	sbc	r0, r29
	...

0000008b <__c.2716>:
      8b:	0d 0a 00                                            ...

0000008e <__c.2714>:
      8e:	41 6e 67 75 6c 6f 20 53 65 72 76 6f 3a 00           Angulo Servo:.

0000009c <__c.2712>:
      9c:	56 61 6c 6f 72 20 4f 62 74 65 6e 69 64 6f 2e 2e     Valor Obtenido..
      ac:	2e 0d 0a 00                                         ....

000000b0 <__c.2706>:
      b0:	5b 7b 22 76 61 72 69 61 62 6c 65 22 3a 22 25 73     [{"variable":"%s
      c0:	22 2c 22 76 61 6c 75 65 22 3a 22 25 64 22 7d 2c     ","value":"%d"},
      d0:	7b 22 76 61 72 69 61 62 6c 65 22 3a 22 25 73 22     {"variable":"%s"
      e0:	2c 22 76 61 6c 75 65 22 3a 22 25 64 22 7d 5d 0d     ,"value":"%d"}].
      f0:	0a 0d 0a 00                                         ....

000000f4 <__c.2702>:
      f4:	54 65 6d 70 3a 25 64 20 48 75 6d 52 3a 25 64 0d     Temp:%d HumR:%d.
     104:	0a 00                                               ..

00000106 <__c.2697>:
     106:	47 45 54 20 25 73 20 48 54 54 50 2f 31 2e 31 0d     GET %s HTTP/1.1.
     116:	0a 48 6f 73 74 3a 20 25 73 0d 0a 43 6f 6e 74 65     .Host: %s..Conte
     126:	6e 74 2d 54 79 70 65 3a 20 61 70 70 6c 69 63 61     nt-Type: applica
     136:	74 69 6f 6e 2f 6a 73 6f 6e 0d 0a 58 2d 41 75 74     tion/json..X-Aut
     146:	68 2d 54 6f 6b 65 6e 3a 20 25 73 0d 0a 0d 0a 00     h-Token: %s.....

00000156 <__c.2692>:
     156:	50 4f 53 54 20 25 73 20 48 54 54 50 2f 31 2e 31     POST %s HTTP/1.1
     166:	0d 0a 48 6f 73 74 3a 20 25 73 0d 0a 43 6f 6e 74     ..Host: %s..Cont
     176:	65 6e 74 2d 54 79 70 65 3a 20 61 70 70 6c 69 63     ent-Type: applic
     186:	61 74 69 6f 6e 2f 6a 73 6f 6e 3b 20 63 68 61 72     ation/json; char
     196:	73 65 74 3d 55 54 46 2d 38 0d 0a 43 6f 6e 74 65     set=UTF-8..Conte
     1a6:	6e 74 2d 4c 65 6e 67 74 68 3a 20 25 64 0d 0a 58     nt-Length: %d..X
     1b6:	2d 41 75 74 68 2d 54 6f 6b 65 6e 3a 20 25 73 0d     -Auth-Token: %s.
     1c6:	0a 43 6f 6e 6e 65 63 74 69 6f 6e 3a 20 43 6c 6f     .Connection: Clo
     1d6:	73 65 0d 0a 0d 0a 00                                se.....

000001dd <__c.2678>:
     1dd:	41 54 2b 43 49 50 53 45 4e 44 0d 0a 00              AT+CIPSEND...

000001ea <__c.2676>:
     1ea:	41 54 2b 43 49 50 4d 4f 44 45 3d 31 0d 0a 00        AT+CIPMODE=1...

000001f9 <__c.2674>:
     1f9:	41 54 2b 43 49 50 53 54 41 52 54 3d 22 54 43 50     AT+CIPSTART="TCP
     209:	22 2c 22 25 73 22 2c 25 73 0d 0a 00                 ","%s",%s...

00000215 <__c.2672>:
     215:	41 54 2b 43 49 50 4d 55 58 3d 30 0d 0a 00           AT+CIPMUX=0...

00000223 <__c.2667>:
     223:	0d 0a 00                                            ...

00000226 <__c.2665>:
     226:	49 50 3a 20 00                                      IP: .

0000022b <__c.2663>:
     22b:	41 54 2b 43 49 46 53 52 0d 0a 00                    AT+CIFSR...

00000236 <__c.2659>:
     236:	41 54 0d 0a 00                                      AT...

0000023b <__c.2657>:
     23b:	0d 0a 00                                            ...

0000023e <__c.2655>:
     23e:	2b 2b 2b 00                                         +++.

00000242 <__c.2647>:
     242:	0d 0a 00                                            ...

00000245 <__c.2645>:
     245:	41 54 2b 43 57 4a 41 50 3f 0d 0a 00                 AT+CWJAP?...

00000251 <__c.2641>:
     251:	41 54 0d 0a 00                                      AT...

00000256 <__c.2639>:
     256:	0d 0a 00                                            ...

00000259 <__c.2637>:
     259:	2b 2b 2b 00                                         +++.

0000025d <__c.2629>:
     25d:	41 54 2b 43 57 4a 41 50 3d 22 25 73 22 2c 22 25     AT+CWJAP="%s","%
     26d:	73 22 0d 0a 00                                      s"...

00000272 <__c.2627>:
     272:	4e 6f 20 68 61 79 20 52 65 64 21 0d 0a 20 43 6f     No hay Red!.. Co
     282:	6e 65 63 74 61 6e 64 6f 2e 2e 2e 0d 0a 00           nectando......

00000290 <__c.2625>:
     290:	0d 0a 00                                            ...

00000293 <__c.2623>:
     293:	59 61 20 65 73 74 61 73 20 63 6f 6e 65 63 74 61     Ya estas conecta
     2a3:	64 6f 20 61 20 6c 61 20 52 45 44 21 2c 20 00        do a la RED!, .

000002b2 <__c.2559>:
     2b2:	4c 69 73 74 6f 0d 0a 00                             Listo...

000002ba <__ctors_end>:
     2ba:	11 24       	eor	r1, r1
     2bc:	1f be       	out	0x3f, r1	; 63
     2be:	cf ef       	ldi	r28, 0xFF	; 255
     2c0:	d8 e0       	ldi	r29, 0x08	; 8
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	cd bf       	out	0x3d, r28	; 61

000002c6 <__do_copy_data>:
     2c6:	17 e0       	ldi	r17, 0x07	; 7
     2c8:	a0 e0       	ldi	r26, 0x00	; 0
     2ca:	b1 e0       	ldi	r27, 0x01	; 1
     2cc:	ea e3       	ldi	r30, 0x3A	; 58
     2ce:	f9 e1       	ldi	r31, 0x19	; 25
     2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <__do_copy_data+0x10>
     2d2:	05 90       	lpm	r0, Z+
     2d4:	0d 92       	st	X+, r0
     2d6:	a0 35       	cpi	r26, 0x50	; 80
     2d8:	b1 07       	cpc	r27, r17
     2da:	d9 f7       	brne	.-10     	; 0x2d2 <__do_copy_data+0xc>

000002dc <__do_clear_bss>:
     2dc:	27 e0       	ldi	r18, 0x07	; 7
     2de:	a0 e5       	ldi	r26, 0x50	; 80
     2e0:	b7 e0       	ldi	r27, 0x07	; 7
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <.do_clear_bss_start>

000002e4 <.do_clear_bss_loop>:
     2e4:	1d 92       	st	X+, r1

000002e6 <.do_clear_bss_start>:
     2e6:	a5 35       	cpi	r26, 0x55	; 85
     2e8:	b2 07       	cpc	r27, r18
     2ea:	e1 f7       	brne	.-8      	; 0x2e4 <.do_clear_bss_loop>
     2ec:	0e 94 99 05 	call	0xb32	; 0xb32 <main>
     2f0:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <_exit>

000002f4 <__bad_interrupt>:
     2f4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002f8 <Set_Reg_in>:
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
}
     2f8:	fc 01       	movw	r30, r24
     2fa:	90 81       	ld	r25, Z
     2fc:	21 e0       	ldi	r18, 0x01	; 1
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	02 c0       	rjmp	.+4      	; 0x306 <Set_Reg_in+0xe>
     302:	22 0f       	add	r18, r18
     304:	33 1f       	adc	r19, r19
     306:	6a 95       	dec	r22
     308:	e2 f7       	brpl	.-8      	; 0x302 <Set_Reg_in+0xa>
     30a:	20 95       	com	r18
     30c:	29 23       	and	r18, r25
     30e:	20 83       	st	Z, r18
     310:	08 95       	ret

00000312 <Set_Port_Low>:
     312:	fc 01       	movw	r30, r24
     314:	90 81       	ld	r25, Z
     316:	21 e0       	ldi	r18, 0x01	; 1
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	02 c0       	rjmp	.+4      	; 0x320 <Set_Port_Low+0xe>
     31c:	22 0f       	add	r18, r18
     31e:	33 1f       	adc	r19, r19
     320:	6a 95       	dec	r22
     322:	e2 f7       	brpl	.-8      	; 0x31c <Set_Port_Low+0xa>
     324:	20 95       	com	r18
     326:	29 23       	and	r18, r25
     328:	20 83       	st	Z, r18
     32a:	08 95       	ret

0000032c <DHT11_Iniciar>:
 void DHT11_Iniciar(DHT11 *Pntr){
     32c:	0f 93       	push	r16
     32e:	1f 93       	push	r17
     330:	cf 93       	push	r28
     332:	df 93       	push	r29
     334:	8c 01       	movw	r16, r24
	Set_Reg_out(Pntr->_DirReg,Pntr->_Pin);
     336:	dc 01       	movw	r26, r24
     338:	12 96       	adiw	r26, 0x02	; 2
     33a:	8c 91       	ld	r24, X
     33c:	12 97       	sbiw	r26, 0x02	; 2
     33e:	15 96       	adiw	r26, 0x05	; 5
     340:	ed 91       	ld	r30, X+
     342:	fc 91       	ld	r31, X
     344:	16 97       	sbiw	r26, 0x06	; 6
 #include <avr/io.h>
 #include <util/delay.h>
 #include "DHT11.h"
 
void Set_Reg_out(volatile uint8_t *Reg,uint8_t Pin){
	*Reg|=(1<<Pin);
     346:	20 81       	ld	r18, Z
     348:	c1 e0       	ldi	r28, 0x01	; 1
     34a:	d0 e0       	ldi	r29, 0x00	; 0
     34c:	ae 01       	movw	r20, r28
     34e:	02 c0       	rjmp	.+4      	; 0x354 <DHT11_Iniciar+0x28>
     350:	44 0f       	add	r20, r20
     352:	55 1f       	adc	r21, r21
     354:	8a 95       	dec	r24
     356:	e2 f7       	brpl	.-8      	; 0x350 <DHT11_Iniciar+0x24>
     358:	ca 01       	movw	r24, r20
     35a:	82 2b       	or	r24, r18
     35c:	80 83       	st	Z, r24
	uint8_t status;
	return status=*Mask&(1<<Pin);
}
 void DHT11_Iniciar(DHT11 *Pntr){
	Set_Reg_out(Pntr->_DirReg,Pntr->_Pin);
	Set_Port_Low(Pntr->_Prtreg,Pntr->_Pin);
     35e:	12 96       	adiw	r26, 0x02	; 2
     360:	6c 91       	ld	r22, X
     362:	12 97       	sbiw	r26, 0x02	; 2
     364:	8d 91       	ld	r24, X+
     366:	9c 91       	ld	r25, X
     368:	0e 94 89 01 	call	0x312	; 0x312 <Set_Port_Low>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     36c:	8f e3       	ldi	r24, 0x3F	; 63
     36e:	9c e9       	ldi	r25, 0x9C	; 156
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	f1 f7       	brne	.-4      	; 0x370 <DHT11_Iniciar+0x44>
     374:	00 c0       	rjmp	.+0      	; 0x376 <DHT11_Iniciar+0x4a>
     376:	00 00       	nop
	_delay_ms(20);
	Set_Port_High(Pntr->_Prtreg,Pntr->_Pin);
     378:	d8 01       	movw	r26, r16
     37a:	12 96       	adiw	r26, 0x02	; 2
     37c:	9c 91       	ld	r25, X
     37e:	12 97       	sbiw	r26, 0x02	; 2
     380:	ed 91       	ld	r30, X+
     382:	fc 91       	ld	r31, X
}
void Set_Reg_in(volatile uint8_t *Reg,uint8_t Pin){
	*Reg&=~(1<<Pin);
}
void Set_Port_High(volatile uint8_t *Port,uint8_t Pin){
	*Port|=(1<<Pin);
     384:	80 81       	ld	r24, Z
     386:	02 c0       	rjmp	.+4      	; 0x38c <DHT11_Iniciar+0x60>
     388:	cc 0f       	add	r28, r28
     38a:	dd 1f       	adc	r29, r29
     38c:	9a 95       	dec	r25
     38e:	e2 f7       	brpl	.-8      	; 0x388 <DHT11_Iniciar+0x5c>
     390:	c8 2b       	or	r28, r24
     392:	c0 83       	st	Z, r28
	Set_Port_Low(Pntr->_Prtreg,Pntr->_Pin);
	_delay_ms(20);
	Set_Port_High(Pntr->_Prtreg,Pntr->_Pin);
	/*_delay_us(20);
	*Pntr->_Prtreg&=~(1<<Pntr->_Pin);*/
 }
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	1f 91       	pop	r17
     39a:	0f 91       	pop	r16
     39c:	08 95       	ret

0000039e <DHT11_ChkResp>:
 void DHT11_ChkResp(DHT11 *Pntr){
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	ec 01       	movw	r28, r24
    Set_Reg_in(Pntr->_DirReg,Pntr->_Pin);
     3a4:	6a 81       	ldd	r22, Y+2	; 0x02
     3a6:	8d 81       	ldd	r24, Y+5	; 0x05
     3a8:	9e 81       	ldd	r25, Y+6	; 0x06
     3aa:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <Set_Reg_in>
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
     3ae:	eb 81       	ldd	r30, Y+3	; 0x03
     3b0:	fc 81       	ldd	r31, Y+4	; 0x04
     3b2:	41 e0       	ldi	r20, 0x01	; 1
     3b4:	50 e0       	ldi	r21, 0x00	; 0
     3b6:	8a 81       	ldd	r24, Y+2	; 0x02
void Set_Port_Low(volatile uint8_t *Port,uint8_t Pin){
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
     3b8:	20 81       	ld	r18, Z
	/*_delay_us(20);
	*Pntr->_Prtreg&=~(1<<Pntr->_Pin);*/
 }
 void DHT11_ChkResp(DHT11 *Pntr){
    Set_Reg_in(Pntr->_DirReg,Pntr->_Pin);
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
     3ba:	ba 01       	movw	r22, r20
     3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DHT11_ChkResp+0x24>
     3be:	66 0f       	add	r22, r22
     3c0:	77 1f       	adc	r23, r23
     3c2:	8a 95       	dec	r24
     3c4:	e2 f7       	brpl	.-8      	; 0x3be <DHT11_ChkResp+0x20>
     3c6:	cb 01       	movw	r24, r22
     3c8:	82 23       	and	r24, r18
     3ca:	a9 f7       	brne	.-22     	; 0x3b6 <DHT11_ChkResp+0x18>
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
     3cc:	41 e0       	ldi	r20, 0x01	; 1
     3ce:	50 e0       	ldi	r21, 0x00	; 0
     3d0:	8a 81       	ldd	r24, Y+2	; 0x02
void Set_Port_Low(volatile uint8_t *Port,uint8_t Pin){
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
     3d2:	20 81       	ld	r18, Z
	*Pntr->_Prtreg&=~(1<<Pntr->_Pin);*/
 }
 void DHT11_ChkResp(DHT11 *Pntr){
    Set_Reg_in(Pntr->_DirReg,Pntr->_Pin);
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
     3d4:	ba 01       	movw	r22, r20
     3d6:	02 c0       	rjmp	.+4      	; 0x3dc <DHT11_ChkResp+0x3e>
     3d8:	66 0f       	add	r22, r22
     3da:	77 1f       	adc	r23, r23
     3dc:	8a 95       	dec	r24
     3de:	e2 f7       	brpl	.-8      	; 0x3d8 <DHT11_ChkResp+0x3a>
     3e0:	cb 01       	movw	r24, r22
     3e2:	82 23       	and	r24, r18
     3e4:	a9 f3       	breq	.-22     	; 0x3d0 <DHT11_ChkResp+0x32>
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
     3e6:	41 e0       	ldi	r20, 0x01	; 1
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	8a 81       	ldd	r24, Y+2	; 0x02
void Set_Port_Low(volatile uint8_t *Port,uint8_t Pin){
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
     3ec:	20 81       	ld	r18, Z
 }
 void DHT11_ChkResp(DHT11 *Pntr){
    Set_Reg_in(Pntr->_DirReg,Pntr->_Pin);
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
     3ee:	ba 01       	movw	r22, r20
     3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <DHT11_ChkResp+0x58>
     3f2:	66 0f       	add	r22, r22
     3f4:	77 1f       	adc	r23, r23
     3f6:	8a 95       	dec	r24
     3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <DHT11_ChkResp+0x54>
     3fa:	cb 01       	movw	r24, r22
     3fc:	82 23       	and	r24, r18
     3fe:	a9 f7       	brne	.-22     	; 0x3ea <DHT11_ChkResp+0x4c>
 }
     400:	df 91       	pop	r29
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <DHT11_Leerbyte>:
 uint8_t DHT11_Leerbyte(DHT11 *Pntr){
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	fc 01       	movw	r30, r24
     40c:	68 e0       	ldi	r22, 0x08	; 8
	uint8_t i,data = 0;
     40e:	80 e0       	ldi	r24, 0x00	; 0
	for(i=0;i<8;i++)
	{
		while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
     410:	41 e0       	ldi	r20, 0x01	; 1
     412:	50 e0       	ldi	r21, 0x00	; 0
     414:	a3 81       	ldd	r26, Z+3	; 0x03
     416:	b4 81       	ldd	r27, Z+4	; 0x04
     418:	22 81       	ldd	r18, Z+2	; 0x02
void Set_Port_Low(volatile uint8_t *Port,uint8_t Pin){
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
     41a:	9c 91       	ld	r25, X
 }
 uint8_t DHT11_Leerbyte(DHT11 *Pntr){
	uint8_t i,data = 0;
	for(i=0;i<8;i++)
	{
		while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
     41c:	ea 01       	movw	r28, r20
     41e:	02 c0       	rjmp	.+4      	; 0x424 <DHT11_Leerbyte+0x1e>
     420:	cc 0f       	add	r28, r28
     422:	dd 1f       	adc	r29, r29
     424:	2a 95       	dec	r18
     426:	e2 f7       	brpl	.-8      	; 0x420 <DHT11_Leerbyte+0x1a>
     428:	9e 01       	movw	r18, r28
     42a:	29 23       	and	r18, r25
     42c:	a9 f3       	breq	.-22     	; 0x418 <DHT11_Leerbyte+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     42e:	d0 e5       	ldi	r29, 0x50	; 80
     430:	da 95       	dec	r29
     432:	f1 f7       	brne	.-4      	; 0x430 <DHT11_Leerbyte+0x2a>
		_delay_us(30);
		if(LeerPin(Pntr->_MaskReg,Pntr->_Pin)){  
     434:	22 81       	ldd	r18, Z+2	; 0x02
     436:	a3 81       	ldd	r26, Z+3	; 0x03
     438:	b4 81       	ldd	r27, Z+4	; 0x04
void Set_Port_Low(volatile uint8_t *Port,uint8_t Pin){
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
     43a:	9c 91       	ld	r25, X
	uint8_t i,data = 0;
	for(i=0;i<8;i++)
	{
		while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
		_delay_us(30);
		if(LeerPin(Pntr->_MaskReg,Pntr->_Pin)){  
     43c:	ea 01       	movw	r28, r20
     43e:	02 c0       	rjmp	.+4      	; 0x444 <DHT11_Leerbyte+0x3e>
     440:	cc 0f       	add	r28, r28
     442:	dd 1f       	adc	r29, r29
     444:	2a 95       	dec	r18
     446:	e2 f7       	brpl	.-8      	; 0x440 <DHT11_Leerbyte+0x3a>
     448:	9e 01       	movw	r18, r28
     44a:	29 23       	and	r18, r25
     44c:	19 f0       	breq	.+6      	; 0x454 <DHT11_Leerbyte+0x4e>
			data = (data<<1) | (0x01);
     44e:	88 0f       	add	r24, r24
     450:	81 60       	ori	r24, 0x01	; 1
     452:	01 c0       	rjmp	.+2      	; 0x456 <DHT11_Leerbyte+0x50>
		}else{
			data = (data<<1);
     454:	88 0f       	add	r24, r24
		}
		while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
     456:	22 81       	ldd	r18, Z+2	; 0x02
void Set_Port_Low(volatile uint8_t *Port,uint8_t Pin){
	*Port&=~(1<<Pin);
}
uint8_t LeerPin(volatile uint8_t *Mask,uint8_t Pin){
	uint8_t status;
	return status=*Mask&(1<<Pin);
     458:	9c 91       	ld	r25, X
		if(LeerPin(Pntr->_MaskReg,Pntr->_Pin)){  
			data = (data<<1) | (0x01);
		}else{
			data = (data<<1);
		}
		while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
     45a:	ea 01       	movw	r28, r20
     45c:	02 c0       	rjmp	.+4      	; 0x462 <DHT11_Leerbyte+0x5c>
     45e:	cc 0f       	add	r28, r28
     460:	dd 1f       	adc	r29, r29
     462:	2a 95       	dec	r18
     464:	e2 f7       	brpl	.-8      	; 0x45e <DHT11_Leerbyte+0x58>
     466:	9e 01       	movw	r18, r28
     468:	29 23       	and	r18, r25
     46a:	a9 f7       	brne	.-22     	; 0x456 <DHT11_Leerbyte+0x50>
     46c:	61 50       	subi	r22, 0x01	; 1
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin)==0);
	while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
 }
 uint8_t DHT11_Leerbyte(DHT11 *Pntr){
	uint8_t i,data = 0;
	for(i=0;i<8;i++)
     46e:	91 f6       	brne	.-92     	; 0x414 <DHT11_Leerbyte+0xe>
			data = (data<<1);
		}
		while(LeerPin(Pntr->_MaskReg,Pntr->_Pin));
	}
	return data;
}
     470:	df 91       	pop	r29
     472:	cf 91       	pop	r28
     474:	08 95       	ret

00000476 <DHT11_LeerVariables>:
 void DHT11_LeerVariables(DHT11 *Pntr){
     476:	cf 93       	push	r28
     478:	df 93       	push	r29
     47a:	ec 01       	movw	r28, r24
	DHT11_Iniciar(Pntr);
     47c:	0e 94 96 01 	call	0x32c	; 0x32c <DHT11_Iniciar>
	DHT11_ChkResp(Pntr);
     480:	ce 01       	movw	r24, r28
     482:	0e 94 cf 01 	call	0x39e	; 0x39e <DHT11_ChkResp>
	Pntr->_HR_Int = DHT11_Leerbyte(Pntr);
     486:	ce 01       	movw	r24, r28
     488:	0e 94 03 02 	call	0x406	; 0x406 <DHT11_Leerbyte>
     48c:	8f 83       	std	Y+7, r24	; 0x07
	Pntr->_HR_Decim = DHT11_Leerbyte(Pntr);
     48e:	ce 01       	movw	r24, r28
     490:	0e 94 03 02 	call	0x406	; 0x406 <DHT11_Leerbyte>
     494:	88 87       	std	Y+8, r24	; 0x08
	Pntr->_Temp_Int = DHT11_Leerbyte(Pntr);
     496:	ce 01       	movw	r24, r28
     498:	0e 94 03 02 	call	0x406	; 0x406 <DHT11_Leerbyte>
     49c:	89 87       	std	Y+9, r24	; 0x09
	Pntr->_Temp_Decim = DHT11_Leerbyte(Pntr);
     49e:	ce 01       	movw	r24, r28
     4a0:	0e 94 03 02 	call	0x406	; 0x406 <DHT11_Leerbyte>
     4a4:	8a 87       	std	Y+10, r24	; 0x0a
	Pntr->_ChkSum = DHT11_Leerbyte(Pntr);
     4a6:	ce 01       	movw	r24, r28
     4a8:	0e 94 03 02 	call	0x406	; 0x406 <DHT11_Leerbyte>
     4ac:	8b 87       	std	Y+11, r24	; 0x0b
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	08 95       	ret

000004b4 <SoftEnviarCh>:
	W->_TempEsp=200;
	Env_Usart_P(W->_SERIAL,PSTR("+++"));
	_delay_ms(1000);
	Enviar_ESP_P(W,PSTR("AT+CIPMODE=0\r\n"));
	Enviar_ESP_P(W,PSTR("AT+CIPCLOSE\r\n"));
}
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	35 e1       	ldi	r19, 0x15	; 21
     4b8:	f8 94       	cli
     4ba:	26 9a       	sbi	0x04, 6	; 4
     4bc:	2e 98       	cbi	0x05, 6	; 5
     4be:	05 b0       	in	r0, 0x05	; 5
     4c0:	93 e0       	ldi	r25, 0x03	; 3
     4c2:	23 2f       	mov	r18, r19
     4c4:	2a 95       	dec	r18
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <SoftEnviarCh+0x10>
     4c8:	80 fb       	bst	r24, 0
     4ca:	06 f8       	bld	r0, 6
     4cc:	96 95       	lsr	r25
     4ce:	87 95       	ror	r24
     4d0:	05 b8       	out	0x05, r0	; 5
     4d2:	b9 f7       	brne	.-18     	; 0x4c2 <SoftEnviarCh+0xe>
     4d4:	78 94       	sei
     4d6:	08 95       	ret

000004d8 <SoftEnviarStr>:
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
     4de:	88 81       	ld	r24, Y
     4e0:	88 23       	and	r24, r24
     4e2:	31 f0       	breq	.+12     	; 0x4f0 <SoftEnviarStr+0x18>
     4e4:	21 96       	adiw	r28, 0x01	; 1
     4e6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <SoftEnviarCh>
     4ea:	89 91       	ld	r24, Y+
     4ec:	81 11       	cpse	r24, r1
     4ee:	fb cf       	rjmp	.-10     	; 0x4e6 <SoftEnviarStr+0xe>
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	08 95       	ret

000004f6 <LeerSensor>:
     4f6:	0f 93       	push	r16
     4f8:	1f 93       	push	r17
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	cd b7       	in	r28, 0x3d	; 61
     500:	de b7       	in	r29, 0x3e	; 62
     502:	c4 56       	subi	r28, 0x64	; 100
     504:	d1 09       	sbc	r29, r1
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	88 e1       	ldi	r24, 0x18	; 24
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	0e 94 3b 02 	call	0x476	; 0x476 <DHT11_LeerVariables>
     518:	e8 e1       	ldi	r30, 0x18	; 24
     51a:	f1 e0       	ldi	r31, 0x01	; 1
     51c:	87 81       	ldd	r24, Z+7	; 0x07
     51e:	1f 92       	push	r1
     520:	8f 93       	push	r24
     522:	81 85       	ldd	r24, Z+9	; 0x09
     524:	1f 92       	push	r1
     526:	8f 93       	push	r24
     528:	84 ef       	ldi	r24, 0xF4	; 244
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	9f 93       	push	r25
     52e:	8f 93       	push	r24
     530:	8e 01       	movw	r16, r28
     532:	0f 5f       	subi	r16, 0xFF	; 255
     534:	1f 4f       	sbci	r17, 0xFF	; 255
     536:	1f 93       	push	r17
     538:	0f 93       	push	r16
     53a:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
     53e:	c8 01       	movw	r24, r16
     540:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     544:	0f b6       	in	r0, 0x3f	; 63
     546:	f8 94       	cli
     548:	de bf       	out	0x3e, r29	; 62
     54a:	0f be       	out	0x3f, r0	; 63
     54c:	cd bf       	out	0x3d, r28	; 61
     54e:	cc 59       	subi	r28, 0x9C	; 156
     550:	df 4f       	sbci	r29, 0xFF	; 255
     552:	0f b6       	in	r0, 0x3f	; 63
     554:	f8 94       	cli
     556:	de bf       	out	0x3e, r29	; 62
     558:	0f be       	out	0x3f, r0	; 63
     55a:	cd bf       	out	0x3d, r28	; 61
     55c:	df 91       	pop	r29
     55e:	cf 91       	pop	r28
     560:	1f 91       	pop	r17
     562:	0f 91       	pop	r16
     564:	08 95       	ret

00000566 <SoftEnviarStr_P>:
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	ec 01       	movw	r28, r24
     56c:	fc 01       	movw	r30, r24
     56e:	84 91       	lpm	r24, Z
     570:	88 23       	and	r24, r24
     572:	49 f0       	breq	.+18     	; 0x586 <SoftEnviarStr_P+0x20>
     574:	fe 01       	movw	r30, r28
     576:	21 96       	adiw	r28, 0x01	; 1
     578:	84 91       	lpm	r24, Z
     57a:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <SoftEnviarCh>
     57e:	fe 01       	movw	r30, r28
     580:	84 91       	lpm	r24, Z
     582:	81 11       	cpse	r24, r1
     584:	f7 cf       	rjmp	.-18     	; 0x574 <SoftEnviarStr_P+0xe>
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <__vector_9>:
     58c:	1f 92       	push	r1
     58e:	0f 92       	push	r0
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	0f 92       	push	r0
     594:	11 24       	eor	r1, r1
     596:	8f 93       	push	r24
     598:	9f 93       	push	r25
     59a:	af 93       	push	r26
     59c:	bf 93       	push	r27
     59e:	80 91 54 07 	lds	r24, 0x0754	; 0x800754 <Cada2>
     5a2:	8f 5f       	subi	r24, 0xFF	; 255
     5a4:	80 93 54 07 	sts	0x0754, r24	; 0x800754 <Cada2>
     5a8:	80 91 54 07 	lds	r24, 0x0754	; 0x800754 <Cada2>
     5ac:	82 30       	cpi	r24, 0x02	; 2
     5ae:	a9 f4       	brne	.+42     	; 0x5da <__vector_9+0x4e>
     5b0:	80 91 50 07 	lds	r24, 0x0750	; 0x800750 <__data_end>
     5b4:	90 91 51 07 	lds	r25, 0x0751	; 0x800751 <__data_end+0x1>
     5b8:	a0 91 52 07 	lds	r26, 0x0752	; 0x800752 <__data_end+0x2>
     5bc:	b0 91 53 07 	lds	r27, 0x0753	; 0x800753 <__data_end+0x3>
     5c0:	01 96       	adiw	r24, 0x01	; 1
     5c2:	a1 1d       	adc	r26, r1
     5c4:	b1 1d       	adc	r27, r1
     5c6:	80 93 50 07 	sts	0x0750, r24	; 0x800750 <__data_end>
     5ca:	90 93 51 07 	sts	0x0751, r25	; 0x800751 <__data_end+0x1>
     5ce:	a0 93 52 07 	sts	0x0752, r26	; 0x800752 <__data_end+0x2>
     5d2:	b0 93 53 07 	sts	0x0753, r27	; 0x800753 <__data_end+0x3>
     5d6:	10 92 54 07 	sts	0x0754, r1	; 0x800754 <Cada2>
     5da:	bf 91       	pop	r27
     5dc:	af 91       	pop	r26
     5de:	9f 91       	pop	r25
     5e0:	8f 91       	pop	r24
     5e2:	0f 90       	pop	r0
     5e4:	0f be       	out	0x3f, r0	; 63
     5e6:	0f 90       	pop	r0
     5e8:	1f 90       	pop	r1
     5ea:	18 95       	reti

000005ec <ConfLeds>:
     5ec:	8a b1       	in	r24, 0x0a	; 10
     5ee:	84 69       	ori	r24, 0x94	; 148
     5f0:	8a b9       	out	0x0a, r24	; 10
     5f2:	08 95       	ret

000005f4 <ConfTimers>:
     5f4:	e0 eb       	ldi	r30, 0xB0	; 176
     5f6:	f0 e0       	ldi	r31, 0x00	; 0
     5f8:	80 81       	ld	r24, Z
     5fa:	81 6a       	ori	r24, 0xA1	; 161
     5fc:	80 83       	st	Z, r24
     5fe:	82 e0       	ldi	r24, 0x02	; 2
     600:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     60a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     60e:	84 b5       	in	r24, 0x24	; 36
     610:	81 6a       	ori	r24, 0xA1	; 161
     612:	84 bd       	out	0x24, r24	; 36
     614:	85 b5       	in	r24, 0x25	; 37
     616:	83 60       	ori	r24, 0x03	; 3
     618:	85 bd       	out	0x25, r24	; 37
     61a:	56 9a       	sbi	0x0a, 6	; 10
     61c:	08 95       	ret

0000061e <Enviar_ESP>:
     61e:	8f 92       	push	r8
     620:	9f 92       	push	r9
     622:	af 92       	push	r10
     624:	bf 92       	push	r11
     626:	cf 92       	push	r12
     628:	df 92       	push	r13
     62a:	ef 92       	push	r14
     62c:	ff 92       	push	r15
     62e:	0f 93       	push	r16
     630:	1f 93       	push	r17
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	ec 01       	movw	r28, r24
     638:	88 81       	ld	r24, Y
     63a:	0e 94 22 07 	call	0xe44	; 0xe44 <Env_Usart>
     63e:	80 90 50 07 	lds	r8, 0x0750	; 0x800750 <__data_end>
     642:	90 90 51 07 	lds	r9, 0x0751	; 0x800751 <__data_end+0x1>
     646:	a0 90 52 07 	lds	r10, 0x0752	; 0x800752 <__data_end+0x2>
     64a:	b0 90 53 07 	lds	r11, 0x0753	; 0x800753 <__data_end+0x3>
     64e:	40 91 50 07 	lds	r20, 0x0750	; 0x800750 <__data_end>
     652:	50 91 51 07 	lds	r21, 0x0751	; 0x800751 <__data_end+0x1>
     656:	60 91 52 07 	lds	r22, 0x0752	; 0x800752 <__data_end+0x2>
     65a:	70 91 53 07 	lds	r23, 0x0753	; 0x800753 <__data_end+0x3>
     65e:	fe 01       	movw	r30, r28
     660:	eb 54       	subi	r30, 0x4B	; 75
     662:	fd 4f       	sbci	r31, 0xFD	; 253
     664:	80 81       	ld	r24, Z
     666:	91 81       	ldd	r25, Z+1	; 0x01
     668:	a2 81       	ldd	r26, Z+2	; 0x02
     66a:	b3 81       	ldd	r27, Z+3	; 0x03
     66c:	88 0d       	add	r24, r8
     66e:	99 1d       	adc	r25, r9
     670:	aa 1d       	adc	r26, r10
     672:	bb 1d       	adc	r27, r11
     674:	48 17       	cp	r20, r24
     676:	59 07       	cpc	r21, r25
     678:	6a 07       	cpc	r22, r26
     67a:	7b 07       	cpc	r23, r27
     67c:	60 f1       	brcs	.+88     	; 0x6d6 <Enviar_ESP+0xb8>
     67e:	38 c0       	rjmp	.+112    	; 0x6f0 <Enviar_ESP+0xd2>
     680:	8f ef       	ldi	r24, 0xFF	; 255
     682:	e8 1a       	sub	r14, r24
     684:	f8 0a       	sbc	r15, r24
     686:	88 81       	ld	r24, Y
     688:	0e 94 16 07 	call	0xe2c	; 0xe2c <leerCaracter_Usart>
     68c:	f8 01       	movw	r30, r16
     68e:	81 93       	st	Z+, r24
     690:	8f 01       	movw	r16, r30
     692:	88 81       	ld	r24, Y
     694:	0e 94 55 07 	call	0xeaa	; 0xeaa <CaracterSinLeer_Usart>
     698:	81 11       	cpse	r24, r1
     69a:	f2 cf       	rjmp	.-28     	; 0x680 <Enviar_ESP+0x62>
     69c:	fe 01       	movw	r30, r28
     69e:	ee 0d       	add	r30, r14
     6a0:	ff 1d       	adc	r31, r15
     6a2:	eb 54       	subi	r30, 0x4B	; 75
     6a4:	ff 4f       	sbci	r31, 0xFF	; 255
     6a6:	10 82       	st	Z, r1
     6a8:	40 91 50 07 	lds	r20, 0x0750	; 0x800750 <__data_end>
     6ac:	50 91 51 07 	lds	r21, 0x0751	; 0x800751 <__data_end+0x1>
     6b0:	60 91 52 07 	lds	r22, 0x0752	; 0x800752 <__data_end+0x2>
     6b4:	70 91 53 07 	lds	r23, 0x0753	; 0x800753 <__data_end+0x3>
     6b8:	f6 01       	movw	r30, r12
     6ba:	80 81       	ld	r24, Z
     6bc:	91 81       	ldd	r25, Z+1	; 0x01
     6be:	a2 81       	ldd	r26, Z+2	; 0x02
     6c0:	b3 81       	ldd	r27, Z+3	; 0x03
     6c2:	88 0d       	add	r24, r8
     6c4:	99 1d       	adc	r25, r9
     6c6:	aa 1d       	adc	r26, r10
     6c8:	bb 1d       	adc	r27, r11
     6ca:	48 17       	cp	r20, r24
     6cc:	59 07       	cpc	r21, r25
     6ce:	6a 07       	cpc	r22, r26
     6d0:	7b 07       	cpc	r23, r27
     6d2:	40 f0       	brcs	.+16     	; 0x6e4 <Enviar_ESP+0xc6>
     6d4:	0d c0       	rjmp	.+26     	; 0x6f0 <Enviar_ESP+0xd2>
     6d6:	e1 2c       	mov	r14, r1
     6d8:	f1 2c       	mov	r15, r1
     6da:	6e 01       	movw	r12, r28
     6dc:	fb e4       	ldi	r31, 0x4B	; 75
     6de:	cf 1a       	sub	r12, r31
     6e0:	fd ef       	ldi	r31, 0xFD	; 253
     6e2:	df 0a       	sbc	r13, r31
     6e4:	87 01       	movw	r16, r14
     6e6:	0b 54       	subi	r16, 0x4B	; 75
     6e8:	1f 4f       	sbci	r17, 0xFF	; 255
     6ea:	0c 0f       	add	r16, r28
     6ec:	1d 1f       	adc	r17, r29
     6ee:	d1 cf       	rjmp	.-94     	; 0x692 <Enviar_ESP+0x74>
     6f0:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     6f4:	88 23       	and	r24, r24
     6f6:	29 f0       	breq	.+10     	; 0x702 <Enviar_ESP+0xe4>
     6f8:	ce 01       	movw	r24, r28
     6fa:	8b 54       	subi	r24, 0x4B	; 75
     6fc:	9f 4f       	sbci	r25, 0xFF	; 255
     6fe:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	1f 91       	pop	r17
     708:	0f 91       	pop	r16
     70a:	ff 90       	pop	r15
     70c:	ef 90       	pop	r14
     70e:	df 90       	pop	r13
     710:	cf 90       	pop	r12
     712:	bf 90       	pop	r11
     714:	af 90       	pop	r10
     716:	9f 90       	pop	r9
     718:	8f 90       	pop	r8
     71a:	08 95       	ret

0000071c <Enviar_ESP_P>:
     71c:	8f 92       	push	r8
     71e:	9f 92       	push	r9
     720:	af 92       	push	r10
     722:	bf 92       	push	r11
     724:	cf 92       	push	r12
     726:	df 92       	push	r13
     728:	ef 92       	push	r14
     72a:	ff 92       	push	r15
     72c:	0f 93       	push	r16
     72e:	1f 93       	push	r17
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	ec 01       	movw	r28, r24
     736:	80 90 50 07 	lds	r8, 0x0750	; 0x800750 <__data_end>
     73a:	90 90 51 07 	lds	r9, 0x0751	; 0x800751 <__data_end+0x1>
     73e:	a0 90 52 07 	lds	r10, 0x0752	; 0x800752 <__data_end+0x2>
     742:	b0 90 53 07 	lds	r11, 0x0753	; 0x800753 <__data_end+0x3>
     746:	88 81       	ld	r24, Y
     748:	0e 94 3a 07 	call	0xe74	; 0xe74 <Env_Usart_P>
     74c:	40 91 50 07 	lds	r20, 0x0750	; 0x800750 <__data_end>
     750:	50 91 51 07 	lds	r21, 0x0751	; 0x800751 <__data_end+0x1>
     754:	60 91 52 07 	lds	r22, 0x0752	; 0x800752 <__data_end+0x2>
     758:	70 91 53 07 	lds	r23, 0x0753	; 0x800753 <__data_end+0x3>
     75c:	fe 01       	movw	r30, r28
     75e:	eb 54       	subi	r30, 0x4B	; 75
     760:	fd 4f       	sbci	r31, 0xFD	; 253
     762:	80 81       	ld	r24, Z
     764:	91 81       	ldd	r25, Z+1	; 0x01
     766:	a2 81       	ldd	r26, Z+2	; 0x02
     768:	b3 81       	ldd	r27, Z+3	; 0x03
     76a:	88 0d       	add	r24, r8
     76c:	99 1d       	adc	r25, r9
     76e:	aa 1d       	adc	r26, r10
     770:	bb 1d       	adc	r27, r11
     772:	48 17       	cp	r20, r24
     774:	59 07       	cpc	r21, r25
     776:	6a 07       	cpc	r22, r26
     778:	7b 07       	cpc	r23, r27
     77a:	60 f1       	brcs	.+88     	; 0x7d4 <Enviar_ESP_P+0xb8>
     77c:	38 c0       	rjmp	.+112    	; 0x7ee <Enviar_ESP_P+0xd2>
     77e:	8f ef       	ldi	r24, 0xFF	; 255
     780:	e8 1a       	sub	r14, r24
     782:	f8 0a       	sbc	r15, r24
     784:	88 81       	ld	r24, Y
     786:	0e 94 16 07 	call	0xe2c	; 0xe2c <leerCaracter_Usart>
     78a:	f8 01       	movw	r30, r16
     78c:	81 93       	st	Z+, r24
     78e:	8f 01       	movw	r16, r30
     790:	88 81       	ld	r24, Y
     792:	0e 94 55 07 	call	0xeaa	; 0xeaa <CaracterSinLeer_Usart>
     796:	81 11       	cpse	r24, r1
     798:	f2 cf       	rjmp	.-28     	; 0x77e <Enviar_ESP_P+0x62>
     79a:	fe 01       	movw	r30, r28
     79c:	ee 0d       	add	r30, r14
     79e:	ff 1d       	adc	r31, r15
     7a0:	eb 54       	subi	r30, 0x4B	; 75
     7a2:	ff 4f       	sbci	r31, 0xFF	; 255
     7a4:	10 82       	st	Z, r1
     7a6:	40 91 50 07 	lds	r20, 0x0750	; 0x800750 <__data_end>
     7aa:	50 91 51 07 	lds	r21, 0x0751	; 0x800751 <__data_end+0x1>
     7ae:	60 91 52 07 	lds	r22, 0x0752	; 0x800752 <__data_end+0x2>
     7b2:	70 91 53 07 	lds	r23, 0x0753	; 0x800753 <__data_end+0x3>
     7b6:	f6 01       	movw	r30, r12
     7b8:	80 81       	ld	r24, Z
     7ba:	91 81       	ldd	r25, Z+1	; 0x01
     7bc:	a2 81       	ldd	r26, Z+2	; 0x02
     7be:	b3 81       	ldd	r27, Z+3	; 0x03
     7c0:	88 0d       	add	r24, r8
     7c2:	99 1d       	adc	r25, r9
     7c4:	aa 1d       	adc	r26, r10
     7c6:	bb 1d       	adc	r27, r11
     7c8:	48 17       	cp	r20, r24
     7ca:	59 07       	cpc	r21, r25
     7cc:	6a 07       	cpc	r22, r26
     7ce:	7b 07       	cpc	r23, r27
     7d0:	40 f0       	brcs	.+16     	; 0x7e2 <Enviar_ESP_P+0xc6>
     7d2:	0d c0       	rjmp	.+26     	; 0x7ee <Enviar_ESP_P+0xd2>
     7d4:	e1 2c       	mov	r14, r1
     7d6:	f1 2c       	mov	r15, r1
     7d8:	6e 01       	movw	r12, r28
     7da:	fb e4       	ldi	r31, 0x4B	; 75
     7dc:	cf 1a       	sub	r12, r31
     7de:	fd ef       	ldi	r31, 0xFD	; 253
     7e0:	df 0a       	sbc	r13, r31
     7e2:	87 01       	movw	r16, r14
     7e4:	0b 54       	subi	r16, 0x4B	; 75
     7e6:	1f 4f       	sbci	r17, 0xFF	; 255
     7e8:	0c 0f       	add	r16, r28
     7ea:	1d 1f       	adc	r17, r29
     7ec:	d1 cf       	rjmp	.-94     	; 0x790 <Enviar_ESP_P+0x74>
     7ee:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     7f2:	88 23       	and	r24, r24
     7f4:	29 f0       	breq	.+10     	; 0x800 <Enviar_ESP_P+0xe4>
     7f6:	ce 01       	movw	r24, r28
     7f8:	8b 54       	subi	r24, 0x4B	; 75
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	df 90       	pop	r13
     80e:	cf 90       	pop	r12
     810:	bf 90       	pop	r11
     812:	af 90       	pop	r10
     814:	9f 90       	pop	r9
     816:	8f 90       	pop	r8
     818:	08 95       	ret

0000081a <StatusWifi>:
     81a:	ef 92       	push	r14
     81c:	ff 92       	push	r15
     81e:	0f 93       	push	r16
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
     826:	ec 01       	movw	r28, r24
     828:	8c 01       	movw	r16, r24
     82a:	0b 54       	subi	r16, 0x4B	; 75
     82c:	1f 4f       	sbci	r17, 0xFF	; 255
     82e:	69 e5       	ldi	r22, 0x59	; 89
     830:	72 e0       	ldi	r23, 0x02	; 2
     832:	88 81       	ld	r24, Y
     834:	0e 94 3a 07 	call	0xe74	; 0xe74 <Env_Usart_P>
     838:	2f ef       	ldi	r18, 0xFF	; 255
     83a:	89 e6       	ldi	r24, 0x69	; 105
     83c:	98 e1       	ldi	r25, 0x18	; 24
     83e:	21 50       	subi	r18, 0x01	; 1
     840:	80 40       	sbci	r24, 0x00	; 0
     842:	90 40       	sbci	r25, 0x00	; 0
     844:	e1 f7       	brne	.-8      	; 0x83e <StatusWifi+0x24>
     846:	00 c0       	rjmp	.+0      	; 0x848 <StatusWifi+0x2e>
     848:	00 00       	nop
     84a:	66 e5       	ldi	r22, 0x56	; 86
     84c:	72 e0       	ldi	r23, 0x02	; 2
     84e:	ce 01       	movw	r24, r28
     850:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     854:	61 e5       	ldi	r22, 0x51	; 81
     856:	72 e0       	ldi	r23, 0x02	; 2
     858:	ce 01       	movw	r24, r28
     85a:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     85e:	60 ee       	ldi	r22, 0xE0	; 224
     860:	76 e0       	ldi	r23, 0x06	; 6
     862:	c8 01       	movw	r24, r16
     864:	0e 94 68 09 	call	0x12d0	; 0x12d0 <strstr>
     868:	89 2b       	or	r24, r25
     86a:	09 f7       	brne	.-62     	; 0x82e <StatusWifi+0x14>
     86c:	80 e9       	ldi	r24, 0x90	; 144
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	a0 e0       	ldi	r26, 0x00	; 0
     872:	b0 e0       	ldi	r27, 0x00	; 0
     874:	fe 01       	movw	r30, r28
     876:	eb 54       	subi	r30, 0x4B	; 75
     878:	fd 4f       	sbci	r31, 0xFD	; 253
     87a:	80 83       	st	Z, r24
     87c:	91 83       	std	Z+1, r25	; 0x01
     87e:	a2 83       	std	Z+2, r26	; 0x02
     880:	b3 83       	std	Z+3, r27	; 0x03
     882:	65 e4       	ldi	r22, 0x45	; 69
     884:	72 e0       	ldi	r23, 0x02	; 2
     886:	ce 01       	movw	r24, r28
     888:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     88c:	66 ee       	ldi	r22, 0xE6	; 230
     88e:	76 e0       	ldi	r23, 0x06	; 6
     890:	80 2f       	mov	r24, r16
     892:	91 2f       	mov	r25, r17
     894:	0e 94 68 09 	call	0x12d0	; 0x12d0 <strstr>
     898:	11 e0       	ldi	r17, 0x01	; 1
     89a:	00 97       	sbiw	r24, 0x00	; 0
     89c:	09 f4       	brne	.+2      	; 0x8a0 <StatusWifi+0x86>
     89e:	10 e0       	ldi	r17, 0x00	; 0
     8a0:	20 91 df 06 	lds	r18, 0x06DF	; 0x8006df <DEV>
     8a4:	22 23       	and	r18, r18
     8a6:	31 f0       	breq	.+12     	; 0x8b4 <StatusWifi+0x9a>
     8a8:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     8ac:	82 e4       	ldi	r24, 0x42	; 66
     8ae:	92 e0       	ldi	r25, 0x02	; 2
     8b0:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     8b4:	cb 54       	subi	r28, 0x4B	; 75
     8b6:	dd 4f       	sbci	r29, 0xFD	; 253
     8b8:	88 ec       	ldi	r24, 0xC8	; 200
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	a0 e0       	ldi	r26, 0x00	; 0
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	88 83       	st	Y, r24
     8c2:	99 83       	std	Y+1, r25	; 0x01
     8c4:	aa 83       	std	Y+2, r26	; 0x02
     8c6:	bb 83       	std	Y+3, r27	; 0x03
     8c8:	81 2f       	mov	r24, r17
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	1f 91       	pop	r17
     8d0:	0f 91       	pop	r16
     8d2:	ff 90       	pop	r15
     8d4:	ef 90       	pop	r14
     8d6:	08 95       	ret

000008d8 <ObtenerIPWifi>:
     8d8:	cf 92       	push	r12
     8da:	df 92       	push	r13
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	cf 93       	push	r28
     8e6:	df 93       	push	r29
     8e8:	00 d0       	rcall	.+0      	; 0x8ea <ObtenerIPWifi+0x12>
     8ea:	cd b7       	in	r28, 0x3d	; 61
     8ec:	de b7       	in	r29, 0x3e	; 62
     8ee:	8c 01       	movw	r16, r24
     8f0:	7c 01       	movw	r14, r24
     8f2:	25 eb       	ldi	r18, 0xB5	; 181
     8f4:	e2 0e       	add	r14, r18
     8f6:	f1 1c       	adc	r15, r1
     8f8:	6e e3       	ldi	r22, 0x3E	; 62
     8fa:	72 e0       	ldi	r23, 0x02	; 2
     8fc:	f8 01       	movw	r30, r16
     8fe:	80 81       	ld	r24, Z
     900:	0e 94 3a 07 	call	0xe74	; 0xe74 <Env_Usart_P>
     904:	ff ef       	ldi	r31, 0xFF	; 255
     906:	29 e6       	ldi	r18, 0x69	; 105
     908:	88 e1       	ldi	r24, 0x18	; 24
     90a:	f1 50       	subi	r31, 0x01	; 1
     90c:	20 40       	sbci	r18, 0x00	; 0
     90e:	80 40       	sbci	r24, 0x00	; 0
     910:	e1 f7       	brne	.-8      	; 0x90a <__stack+0xb>
     912:	00 c0       	rjmp	.+0      	; 0x914 <__stack+0x15>
     914:	00 00       	nop
     916:	6b e3       	ldi	r22, 0x3B	; 59
     918:	72 e0       	ldi	r23, 0x02	; 2
     91a:	c8 01       	movw	r24, r16
     91c:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     920:	66 e3       	ldi	r22, 0x36	; 54
     922:	72 e0       	ldi	r23, 0x02	; 2
     924:	c8 01       	movw	r24, r16
     926:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     92a:	60 ee       	ldi	r22, 0xE0	; 224
     92c:	76 e0       	ldi	r23, 0x06	; 6
     92e:	c7 01       	movw	r24, r14
     930:	0e 94 68 09 	call	0x12d0	; 0x12d0 <strstr>
     934:	89 2b       	or	r24, r25
     936:	01 f7       	brne	.-64     	; 0x8f8 <ObtenerIPWifi+0x20>
     938:	6b e2       	ldi	r22, 0x2B	; 43
     93a:	72 e0       	ldi	r23, 0x02	; 2
     93c:	c8 01       	movw	r24, r16
     93e:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     942:	6e ee       	ldi	r22, 0xEE	; 238
     944:	76 e0       	ldi	r23, 0x06	; 6
     946:	8e 2d       	mov	r24, r14
     948:	9f 2d       	mov	r25, r15
     94a:	0e 94 68 09 	call	0x12d0	; 0x12d0 <strstr>
     94e:	9a 83       	std	Y+2, r25	; 0x02
     950:	89 83       	std	Y+1, r24	; 0x01
     952:	ae 01       	movw	r20, r28
     954:	4f 5f       	subi	r20, 0xFF	; 255
     956:	5f 4f       	sbci	r21, 0xFF	; 255
     958:	65 ef       	ldi	r22, 0xF5	; 245
     95a:	76 e0       	ldi	r23, 0x06	; 6
     95c:	06 96       	adiw	r24, 0x06	; 6
     95e:	0e 94 82 09 	call	0x1304	; 0x1304 <strtok_r>
     962:	03 5c       	subi	r16, 0xC3	; 195
     964:	1f 4f       	sbci	r17, 0xFF	; 255
     966:	bc 01       	movw	r22, r24
     968:	c8 01       	movw	r24, r16
     96a:	0e 94 61 09 	call	0x12c2	; 0x12c2 <strcpy>
     96e:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     972:	88 23       	and	r24, r24
     974:	59 f0       	breq	.+22     	; 0x98c <__stack+0x8d>
     976:	86 e2       	ldi	r24, 0x26	; 38
     978:	92 e0       	ldi	r25, 0x02	; 2
     97a:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     97e:	c8 01       	movw	r24, r16
     980:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     984:	83 e2       	ldi	r24, 0x23	; 35
     986:	92 e0       	ldi	r25, 0x02	; 2
     988:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     98c:	0f 90       	pop	r0
     98e:	0f 90       	pop	r0
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	0f 91       	pop	r16
     998:	ff 90       	pop	r15
     99a:	ef 90       	pop	r14
     99c:	df 90       	pop	r13
     99e:	cf 90       	pop	r12
     9a0:	08 95       	ret

000009a2 <ConectarWifi>:
     9a2:	ef 92       	push	r14
     9a4:	ff 92       	push	r15
     9a6:	0f 93       	push	r16
     9a8:	1f 93       	push	r17
     9aa:	cf 93       	push	r28
     9ac:	df 93       	push	r29
     9ae:	ec 01       	movw	r28, r24
     9b0:	fc 01       	movw	r30, r24
     9b2:	eb 54       	subi	r30, 0x4B	; 75
     9b4:	fd 4f       	sbci	r31, 0xFD	; 253
     9b6:	88 ee       	ldi	r24, 0xE8	; 232
     9b8:	93 e0       	ldi	r25, 0x03	; 3
     9ba:	a0 e0       	ldi	r26, 0x00	; 0
     9bc:	b0 e0       	ldi	r27, 0x00	; 0
     9be:	80 83       	st	Z, r24
     9c0:	91 83       	std	Z+1, r25	; 0x01
     9c2:	a2 83       	std	Z+2, r26	; 0x02
     9c4:	b3 83       	std	Z+3, r27	; 0x03
     9c6:	ce 01       	movw	r24, r28
     9c8:	0e 94 0d 04 	call	0x81a	; 0x81a <StatusWifi>
     9cc:	88 23       	and	r24, r24
     9ce:	a9 f0       	breq	.+42     	; 0x9fa <ConectarWifi+0x58>
     9d0:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     9d4:	88 23       	and	r24, r24
     9d6:	61 f0       	breq	.+24     	; 0x9f0 <ConectarWifi+0x4e>
     9d8:	83 e9       	ldi	r24, 0x93	; 147
     9da:	92 e0       	ldi	r25, 0x02	; 2
     9dc:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     9e0:	ce 01       	movw	r24, r28
     9e2:	01 96       	adiw	r24, 0x01	; 1
     9e4:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     9e8:	80 e9       	ldi	r24, 0x90	; 144
     9ea:	92 e0       	ldi	r25, 0x02	; 2
     9ec:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     9f0:	ce 01       	movw	r24, r28
     9f2:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <ObtenerIPWifi>
     9f6:	21 e0       	ldi	r18, 0x01	; 1
     9f8:	49 c0       	rjmp	.+146    	; 0xa8c <ConectarWifi+0xea>
     9fa:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     9fe:	88 23       	and	r24, r24
     a00:	21 f0       	breq	.+8      	; 0xa0a <ConectarWifi+0x68>
     a02:	82 e7       	ldi	r24, 0x72	; 114
     a04:	92 e0       	ldi	r25, 0x02	; 2
     a06:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     a0a:	7e 01       	movw	r14, r28
     a0c:	4b e4       	ldi	r20, 0x4B	; 75
     a0e:	e4 1a       	sub	r14, r20
     a10:	4d ef       	ldi	r20, 0xFD	; 253
     a12:	f4 0a       	sbc	r15, r20
     a14:	88 eb       	ldi	r24, 0xB8	; 184
     a16:	9b e0       	ldi	r25, 0x0B	; 11
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	f7 01       	movw	r30, r14
     a1e:	80 83       	st	Z, r24
     a20:	91 83       	std	Z+1, r25	; 0x01
     a22:	a2 83       	std	Z+2, r26	; 0x02
     a24:	b3 83       	std	Z+3, r27	; 0x03
     a26:	8e 01       	movw	r16, r28
     a28:	0f 5a       	subi	r16, 0xAF	; 175
     a2a:	1f 4f       	sbci	r17, 0xFF	; 255
     a2c:	ce 01       	movw	r24, r28
     a2e:	4f 96       	adiw	r24, 0x1f	; 31
     a30:	9f 93       	push	r25
     a32:	8f 93       	push	r24
     a34:	4e 97       	sbiw	r24, 0x1e	; 30
     a36:	9f 93       	push	r25
     a38:	8f 93       	push	r24
     a3a:	8d e5       	ldi	r24, 0x5D	; 93
     a3c:	92 e0       	ldi	r25, 0x02	; 2
     a3e:	9f 93       	push	r25
     a40:	8f 93       	push	r24
     a42:	1f 93       	push	r17
     a44:	0f 93       	push	r16
     a46:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
     a4a:	b8 01       	movw	r22, r16
     a4c:	ce 01       	movw	r24, r28
     a4e:	0e 94 0f 03 	call	0x61e	; 0x61e <Enviar_ESP>
     a52:	68 ef       	ldi	r22, 0xF8	; 248
     a54:	76 e0       	ldi	r23, 0x06	; 6
     a56:	ce 01       	movw	r24, r28
     a58:	8b 54       	subi	r24, 0x4B	; 75
     a5a:	9f 4f       	sbci	r25, 0xFF	; 255
     a5c:	0e 94 68 09 	call	0x12d0	; 0x12d0 <strstr>
     a60:	4c ed       	ldi	r20, 0xDC	; 220
     a62:	55 e0       	ldi	r21, 0x05	; 5
     a64:	60 e0       	ldi	r22, 0x00	; 0
     a66:	70 e0       	ldi	r23, 0x00	; 0
     a68:	f7 01       	movw	r30, r14
     a6a:	40 83       	st	Z, r20
     a6c:	51 83       	std	Z+1, r21	; 0x01
     a6e:	62 83       	std	Z+2, r22	; 0x02
     a70:	73 83       	std	Z+3, r23	; 0x03
     a72:	21 e0       	ldi	r18, 0x01	; 1
     a74:	4d b7       	in	r20, 0x3d	; 61
     a76:	5e b7       	in	r21, 0x3e	; 62
     a78:	48 5f       	subi	r20, 0xF8	; 248
     a7a:	5f 4f       	sbci	r21, 0xFF	; 255
     a7c:	0f b6       	in	r0, 0x3f	; 63
     a7e:	f8 94       	cli
     a80:	5e bf       	out	0x3e, r21	; 62
     a82:	0f be       	out	0x3f, r0	; 63
     a84:	4d bf       	out	0x3d, r20	; 61
     a86:	89 2b       	or	r24, r25
     a88:	09 f4       	brne	.+2      	; 0xa8c <ConectarWifi+0xea>
     a8a:	20 e0       	ldi	r18, 0x00	; 0
     a8c:	82 2f       	mov	r24, r18
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	1f 91       	pop	r17
     a94:	0f 91       	pop	r16
     a96:	ff 90       	pop	r15
     a98:	ef 90       	pop	r14
     a9a:	08 95       	ret

00000a9c <IniciarTCP>:
     a9c:	0f 93       	push	r16
     a9e:	1f 93       	push	r17
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	ec 01       	movw	r28, r24
     aa6:	fc 01       	movw	r30, r24
     aa8:	eb 54       	subi	r30, 0x4B	; 75
     aaa:	fd 4f       	sbci	r31, 0xFD	; 253
     aac:	84 ef       	ldi	r24, 0xF4	; 244
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	80 83       	st	Z, r24
     ab6:	91 83       	std	Z+1, r25	; 0x01
     ab8:	a2 83       	std	Z+2, r26	; 0x02
     aba:	b3 83       	std	Z+3, r27	; 0x03
     abc:	65 e1       	ldi	r22, 0x15	; 21
     abe:	72 e0       	ldi	r23, 0x02	; 2
     ac0:	ce 01       	movw	r24, r28
     ac2:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     ac6:	8e 01       	movw	r16, r28
     ac8:	0f 5a       	subi	r16, 0xAF	; 175
     aca:	1f 4f       	sbci	r17, 0xFF	; 255
     acc:	ce 01       	movw	r24, r28
     ace:	83 5e       	subi	r24, 0xE3	; 227
     ad0:	9c 4f       	sbci	r25, 0xFC	; 252
     ad2:	9f 93       	push	r25
     ad4:	8f 93       	push	r24
     ad6:	84 56       	subi	r24, 0x64	; 100
     ad8:	91 09       	sbc	r25, r1
     ada:	9f 93       	push	r25
     adc:	8f 93       	push	r24
     ade:	89 ef       	ldi	r24, 0xF9	; 249
     ae0:	91 e0       	ldi	r25, 0x01	; 1
     ae2:	9f 93       	push	r25
     ae4:	8f 93       	push	r24
     ae6:	1f 93       	push	r17
     ae8:	0f 93       	push	r16
     aea:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
     aee:	b8 01       	movw	r22, r16
     af0:	ce 01       	movw	r24, r28
     af2:	0e 94 0f 03 	call	0x61e	; 0x61e <Enviar_ESP>
     af6:	6a ee       	ldi	r22, 0xEA	; 234
     af8:	71 e0       	ldi	r23, 0x01	; 1
     afa:	ce 01       	movw	r24, r28
     afc:	0e 94 8e 03 	call	0x71c	; 0x71c <Enviar_ESP_P>
     b00:	8d ed       	ldi	r24, 0xDD	; 221
     b02:	91 e0       	ldi	r25, 0x01	; 1
     b04:	9f 93       	push	r25
     b06:	8f 93       	push	r24
     b08:	1f 93       	push	r17
     b0a:	0f 93       	push	r16
     b0c:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
     b10:	b8 01       	movw	r22, r16
     b12:	88 81       	ld	r24, Y
     b14:	0e 94 22 07 	call	0xe44	; 0xe44 <Env_Usart>
     b18:	8d b7       	in	r24, 0x3d	; 61
     b1a:	9e b7       	in	r25, 0x3e	; 62
     b1c:	0c 96       	adiw	r24, 0x0c	; 12
     b1e:	0f b6       	in	r0, 0x3f	; 63
     b20:	f8 94       	cli
     b22:	9e bf       	out	0x3e, r25	; 62
     b24:	0f be       	out	0x3f, r0	; 63
     b26:	8d bf       	out	0x3d, r24	; 61
     b28:	df 91       	pop	r29
     b2a:	cf 91       	pop	r28
     b2c:	1f 91       	pop	r17
     b2e:	0f 91       	pop	r16
     b30:	08 95       	ret

00000b32 <main>:
     b32:	0e 94 f6 02 	call	0x5ec	; 0x5ec <ConfLeds>
     b36:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <ConfTimers>
     b3a:	68 e0       	ldi	r22, 0x08	; 8
     b3c:	70 e0       	ldi	r23, 0x00	; 0
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	0e 94 04 07 	call	0xe08	; 0xe08 <Inicia_Usart>
     b44:	78 94       	sei
     b46:	c4 e0       	ldi	r28, 0x04	; 4
     b48:	8b b1       	in	r24, 0x0b	; 11
     b4a:	8c 27       	eor	r24, r28
     b4c:	8b b9       	out	0x0b, r24	; 11
     b4e:	84 e2       	ldi	r24, 0x24	; 36
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <ConectarWifi>
     b56:	88 23       	and	r24, r24
     b58:	b9 f3       	breq	.-18     	; 0xb48 <main+0x16>
     b5a:	5a 9a       	sbi	0x0b, 2	; 11
     b5c:	82 eb       	ldi	r24, 0xB2	; 178
     b5e:	92 e0       	ldi	r25, 0x02	; 2
     b60:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     b64:	84 e2       	ldi	r24, 0x24	; 36
     b66:	91 e0       	ldi	r25, 0x01	; 1
     b68:	0e 94 4e 05 	call	0xa9c	; 0xa9c <IniciarTCP>
     b6c:	0f 2e       	mov	r0, r31
     b6e:	f8 e1       	ldi	r31, 0x18	; 24
     b70:	ef 2e       	mov	r14, r31
     b72:	f1 e0       	ldi	r31, 0x01	; 1
     b74:	ff 2e       	mov	r15, r31
     b76:	f0 2d       	mov	r31, r0
     b78:	80 90 50 07 	lds	r8, 0x0750	; 0x800750 <__data_end>
     b7c:	90 90 51 07 	lds	r9, 0x0751	; 0x800751 <__data_end+0x1>
     b80:	a0 90 52 07 	lds	r10, 0x0752	; 0x800752 <__data_end+0x2>
     b84:	b0 90 53 07 	lds	r11, 0x0753	; 0x800753 <__data_end+0x3>
     b88:	c0 e0       	ldi	r28, 0x00	; 0
     b8a:	d1 e0       	ldi	r29, 0x01	; 1
     b8c:	88 81       	ld	r24, Y
     b8e:	99 81       	ldd	r25, Y+1	; 0x01
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	21 f4       	brne	.+8      	; 0xb9c <main+0x6a>
     b94:	ee 81       	ldd	r30, Y+6	; 0x06
     b96:	ff 81       	ldd	r31, Y+7	; 0x07
     b98:	09 95       	icall
     b9a:	18 c0       	rjmp	.+48     	; 0xbcc <main+0x9a>
     b9c:	4a 81       	ldd	r20, Y+2	; 0x02
     b9e:	5b 81       	ldd	r21, Y+3	; 0x03
     ba0:	6c 81       	ldd	r22, Y+4	; 0x04
     ba2:	7d 81       	ldd	r23, Y+5	; 0x05
     ba4:	24 01       	movw	r4, r8
     ba6:	35 01       	movw	r6, r10
     ba8:	44 1a       	sub	r4, r20
     baa:	55 0a       	sbc	r5, r21
     bac:	66 0a       	sbc	r6, r22
     bae:	77 0a       	sbc	r7, r23
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e0       	ldi	r27, 0x00	; 0
     bb4:	48 16       	cp	r4, r24
     bb6:	59 06       	cpc	r5, r25
     bb8:	6a 06       	cpc	r6, r26
     bba:	7b 06       	cpc	r7, r27
     bbc:	38 f0       	brcs	.+14     	; 0xbcc <main+0x9a>
     bbe:	ee 81       	ldd	r30, Y+6	; 0x06
     bc0:	ff 81       	ldd	r31, Y+7	; 0x07
     bc2:	09 95       	icall
     bc4:	8a 82       	std	Y+2, r8	; 0x02
     bc6:	9b 82       	std	Y+3, r9	; 0x03
     bc8:	ac 82       	std	Y+4, r10	; 0x04
     bca:	bd 82       	std	Y+5, r11	; 0x05
     bcc:	28 96       	adiw	r28, 0x08	; 8
     bce:	ce 15       	cp	r28, r14
     bd0:	df 05       	cpc	r29, r15
     bd2:	e1 f6       	brne	.-72     	; 0xb8c <main+0x5a>
     bd4:	d1 cf       	rjmp	.-94     	; 0xb78 <main+0x46>

00000bd6 <PostTCP>:
/*
*/
void PostTCP(WiFi *W){
     bd6:	ef 92       	push	r14
     bd8:	ff 92       	push	r15
     bda:	0f 93       	push	r16
     bdc:	1f 93       	push	r17
     bde:	cf 93       	push	r28
     be0:	df 93       	push	r29
     be2:	ec 01       	movw	r28, r24
	sprintf_P(W->_TCP._Json._Header,PSTR("POST %s HTTP/1.1\r\nHost: %s\r\nContent-Type: application/json; charset=UTF-8\r\nContent-Length: %d\r\nX-Auth-Token: %s\r\nConnection: Close\r\n\r\n"),W->_TCP._URL_R,W->_TCP._URL,strlen(W->_TCP._Json._Payload),W->_TCP._Ubidots._API_TOKEN);
     be4:	8c 01       	movw	r16, r24
     be6:	0f 5d       	subi	r16, 0xDF	; 223
     be8:	1b 4f       	sbci	r17, 0xFB	; 251
     bea:	f8 01       	movw	r30, r16
     bec:	01 90       	ld	r0, Z+
     bee:	00 20       	and	r0, r0
     bf0:	e9 f7       	brne	.-6      	; 0xbec <PostTCP+0x16>
     bf2:	31 97       	sbiw	r30, 0x01	; 1
     bf4:	e0 1b       	sub	r30, r16
     bf6:	f1 0b       	sbc	r31, r17
     bf8:	7c 01       	movw	r14, r24
     bfa:	89 ed       	ldi	r24, 0xD9	; 217
     bfc:	e8 1a       	sub	r14, r24
     bfe:	8c ef       	ldi	r24, 0xFC	; 252
     c00:	f8 0a       	sbc	r15, r24
     c02:	ce 01       	movw	r24, r28
     c04:	83 5b       	subi	r24, 0xB3	; 179
     c06:	9a 4f       	sbci	r25, 0xFA	; 250
     c08:	9f 93       	push	r25
     c0a:	8f 93       	push	r24
     c0c:	ff 93       	push	r31
     c0e:	ef 93       	push	r30
     c10:	84 59       	subi	r24, 0x94	; 148
     c12:	92 40       	sbci	r25, 0x02	; 2
     c14:	9f 93       	push	r25
     c16:	8f 93       	push	r24
     c18:	c2 96       	adiw	r24, 0x32	; 50
     c1a:	9f 93       	push	r25
     c1c:	8f 93       	push	r24
     c1e:	86 e5       	ldi	r24, 0x56	; 86
     c20:	91 e0       	ldi	r25, 0x01	; 1
     c22:	9f 93       	push	r25
     c24:	8f 93       	push	r24
     c26:	ff 92       	push	r15
     c28:	ef 92       	push	r14
     c2a:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
	if(DEV==ACTIVADA){
     c2e:	8d b7       	in	r24, 0x3d	; 61
     c30:	9e b7       	in	r25, 0x3e	; 62
     c32:	0c 96       	adiw	r24, 0x0c	; 12
     c34:	0f b6       	in	r0, 0x3f	; 63
     c36:	f8 94       	cli
     c38:	9e bf       	out	0x3e, r25	; 62
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	8d bf       	out	0x3d, r24	; 61
     c3e:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     c42:	81 30       	cpi	r24, 0x01	; 1
     c44:	31 f4       	brne	.+12     	; 0xc52 <PostTCP+0x7c>
		SoftEnviarStr(W->_TCP._Json._Header);
     c46:	c7 01       	movw	r24, r14
     c48:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
		SoftEnviarStr(W->_TCP._Json._Payload);
     c4c:	c8 01       	movw	r24, r16
     c4e:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
	}
	Env_Usart(W->_SERIAL,W->_TCP._Json._Header);
     c52:	b7 01       	movw	r22, r14
     c54:	88 81       	ld	r24, Y
     c56:	0e 94 22 07 	call	0xe44	; 0xe44 <Env_Usart>
	Env_Usart(W->_SERIAL,W->_TCP._Json._Payload);
     c5a:	b8 01       	movw	r22, r16
     c5c:	88 81       	ld	r24, Y
     c5e:	0e 94 22 07 	call	0xe44	; 0xe44 <Env_Usart>
}
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	1f 91       	pop	r17
     c68:	0f 91       	pop	r16
     c6a:	ff 90       	pop	r15
     c6c:	ef 90       	pop	r14
     c6e:	08 95       	ret

00000c70 <EnviarUbidots>:
	SoftEnviarStr(Buff);
}
/*
*/
void EnviarUbidots(){
	LED_ENVIO_PARPADEO;
     c70:	8b b1       	in	r24, 0x0b	; 11
     c72:	80 58       	subi	r24, 0x80	; 128
     c74:	8b b9       	out	0x0b, r24	; 11
	sprintf_P(Cliente._TCP._Json._Payload,PSTR("[{\"variable\":\"%s\",\"value\":\"%d\"},{\"variable\":\"%s\",\"value\":\"%d\"}]\r\n\r\n"),Cliente._TCP._Ubidots._ID_TEMP_A,DHT1._Temp_Int,Cliente._TCP._Ubidots._ID_HUM_A,DHT1._HR_Int);
     c76:	e8 e1       	ldi	r30, 0x18	; 24
     c78:	f1 e0       	ldi	r31, 0x01	; 1
     c7a:	87 81       	ldd	r24, Z+7	; 0x07
     c7c:	1f 92       	push	r1
     c7e:	8f 93       	push	r24
     c80:	81 ec       	ldi	r24, 0xC1	; 193
     c82:	96 e0       	ldi	r25, 0x06	; 6
     c84:	9f 93       	push	r25
     c86:	8f 93       	push	r24
     c88:	81 85       	ldd	r24, Z+9	; 0x09
     c8a:	1f 92       	push	r1
     c8c:	8f 93       	push	r24
     c8e:	83 ea       	ldi	r24, 0xA3	; 163
     c90:	96 e0       	ldi	r25, 0x06	; 6
     c92:	9f 93       	push	r25
     c94:	8f 93       	push	r24
     c96:	80 eb       	ldi	r24, 0xB0	; 176
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	9f 93       	push	r25
     c9c:	8f 93       	push	r24
     c9e:	85 e4       	ldi	r24, 0x45	; 69
     ca0:	95 e0       	ldi	r25, 0x05	; 5
     ca2:	9f 93       	push	r25
     ca4:	8f 93       	push	r24
     ca6:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
	PostTCP(&Cliente);
     caa:	84 e2       	ldi	r24, 0x24	; 36
     cac:	91 e0       	ldi	r25, 0x01	; 1
     cae:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <PostTCP>
	LED_ENVIO_PARPADEO;
     cb2:	8b b1       	in	r24, 0x0b	; 11
     cb4:	80 58       	subi	r24, 0x80	; 128
     cb6:	8b b9       	out	0x0b, r24	; 11
}
     cb8:	8d b7       	in	r24, 0x3d	; 61
     cba:	9e b7       	in	r25, 0x3e	; 62
     cbc:	0c 96       	adiw	r24, 0x0c	; 12
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	f8 94       	cli
     cc2:	9e bf       	out	0x3e, r25	; 62
     cc4:	0f be       	out	0x3f, r0	; 63
     cc6:	8d bf       	out	0x3d, r24	; 61
     cc8:	08 95       	ret

00000cca <GetTCP>:
	Env_Usart(W->_SERIAL,W->_TCP._Json._Header);
	Env_Usart(W->_SERIAL,W->_TCP._Json._Payload);
}
/*
*/
void GetTCP(WiFi *W){
     cca:	0f 93       	push	r16
     ccc:	1f 93       	push	r17
     cce:	cf 93       	push	r28
     cd0:	df 93       	push	r29
     cd2:	ec 01       	movw	r28, r24
		sprintf_P(W->_TCP._Json._Header,PSTR("GET %s HTTP/1.1\r\nHost: %s\r\nContent-Type: application/json\r\nX-Auth-Token: %s\r\n\r\n"),UBIDOTS_GET,W->_TCP._URL,W->_TCP._Ubidots._API_TOKEN);
     cd4:	8c 01       	movw	r16, r24
     cd6:	09 5d       	subi	r16, 0xD9	; 217
     cd8:	1c 4f       	sbci	r17, 0xFC	; 252
     cda:	83 5b       	subi	r24, 0xB3	; 179
     cdc:	9a 4f       	sbci	r25, 0xFA	; 250
     cde:	9f 93       	push	r25
     ce0:	8f 93       	push	r24
     ce2:	84 59       	subi	r24, 0x94	; 148
     ce4:	92 40       	sbci	r25, 0x02	; 2
     ce6:	9f 93       	push	r25
     ce8:	8f 93       	push	r24
     cea:	87 e0       	ldi	r24, 0x07	; 7
     cec:	97 e0       	ldi	r25, 0x07	; 7
     cee:	9f 93       	push	r25
     cf0:	8f 93       	push	r24
     cf2:	86 e0       	ldi	r24, 0x06	; 6
     cf4:	91 e0       	ldi	r25, 0x01	; 1
     cf6:	9f 93       	push	r25
     cf8:	8f 93       	push	r24
     cfa:	1f 93       	push	r17
     cfc:	0f 93       	push	r16
     cfe:	0e 94 b1 09 	call	0x1362	; 0x1362 <sprintf_P>
		if(DEV==ACTIVADA){
     d02:	8d b7       	in	r24, 0x3d	; 61
     d04:	9e b7       	in	r25, 0x3e	; 62
     d06:	0a 96       	adiw	r24, 0x0a	; 10
     d08:	0f b6       	in	r0, 0x3f	; 63
     d0a:	f8 94       	cli
     d0c:	9e bf       	out	0x3e, r25	; 62
     d0e:	0f be       	out	0x3f, r0	; 63
     d10:	8d bf       	out	0x3d, r24	; 61
     d12:	80 91 df 06 	lds	r24, 0x06DF	; 0x8006df <DEV>
     d16:	81 30       	cpi	r24, 0x01	; 1
     d18:	19 f4       	brne	.+6      	; 0xd20 <GetTCP+0x56>
			SoftEnviarStr(W->_TCP._Json._Header);
     d1a:	c8 01       	movw	r24, r16
     d1c:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
		}
		W->_TempEsp=ESPERA_DEF;
     d20:	fe 01       	movw	r30, r28
     d22:	eb 54       	subi	r30, 0x4B	; 75
     d24:	fd 4f       	sbci	r31, 0xFD	; 253
     d26:	8c ed       	ldi	r24, 0xDC	; 220
     d28:	95 e0       	ldi	r25, 0x05	; 5
     d2a:	a0 e0       	ldi	r26, 0x00	; 0
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	80 83       	st	Z, r24
     d30:	91 83       	std	Z+1, r25	; 0x01
     d32:	a2 83       	std	Z+2, r26	; 0x02
     d34:	b3 83       	std	Z+3, r27	; 0x03
		Enviar_ESP(W,W->_TCP._Json._Header);
     d36:	b8 01       	movw	r22, r16
     d38:	ce 01       	movw	r24, r28
     d3a:	0e 94 0f 03 	call	0x61e	; 0x61e <Enviar_ESP>
}
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	1f 91       	pop	r17
     d44:	0f 91       	pop	r16
     d46:	08 95       	ret

00000d48 <MoverServo>:
	/*
		(x1, y1)=(0, 62.5)
		(x2, y2)=(180, 125)
	*/
	y=62.5+(0.347222*x);
	PWM_SERVO=round(y);
     d48:	68 2f       	mov	r22, r24
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	0e 94 fb 07 	call	0xff6	; 0xff6 <__floatunsisf>
     d54:	25 e1       	ldi	r18, 0x15	; 21
     d56:	37 ec       	ldi	r19, 0xC7	; 199
     d58:	41 eb       	ldi	r20, 0xB1	; 177
     d5a:	5e e3       	ldi	r21, 0x3E	; 62
     d5c:	0e 94 89 08 	call	0x1112	; 0x1112 <__mulsf3>
     d60:	20 e0       	ldi	r18, 0x00	; 0
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	4a e7       	ldi	r20, 0x7A	; 122
     d66:	52 e4       	ldi	r21, 0x42	; 66
     d68:	0e 94 60 07 	call	0xec0	; 0xec0 <__addsf3>
     d6c:	0e 94 f6 08 	call	0x11ec	; 0x11ec <round>
     d70:	0e 94 cc 07 	call	0xf98	; 0xf98 <__fixunssfsi>
     d74:	67 bd       	out	0x27, r22	; 39
     d76:	08 95       	ret

00000d78 <LeerUbidots>:
	PostTCP(&Cliente);
	LED_ENVIO_PARPADEO;
}
/*
*/
void LeerUbidots(){
     d78:	0f 93       	push	r16
     d7a:	1f 93       	push	r17
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	00 d0       	rcall	.+0      	; 0xd82 <LeerUbidots+0xa>
     d82:	cd b7       	in	r28, 0x3d	; 61
     d84:	de b7       	in	r29, 0x3e	; 62
	char *_index;
	char *_valor;
	LED_LEER_PARPADEO;
     d86:	9b b1       	in	r25, 0x0b	; 11
     d88:	80 e1       	ldi	r24, 0x10	; 16
     d8a:	89 27       	eor	r24, r25
     d8c:	8b b9       	out	0x0b, r24	; 11
	GetTCP(&Cliente);//Envia el Request a ubidots
     d8e:	84 e2       	ldi	r24, 0x24	; 36
     d90:	91 e0       	ldi	r25, 0x01	; 1
     d92:	0e 94 65 06 	call	0xcca	; 0xcca <GetTCP>
}
/*
*/
char* Buscar_ESP(WiFi *Pntr, char *Str){
	char *_status;
	_status=strstr(Pntr->_Buff,Str);
     d96:	67 e4       	ldi	r22, 0x47	; 71
     d98:	77 e0       	ldi	r23, 0x07	; 7
     d9a:	89 ed       	ldi	r24, 0xD9	; 217
     d9c:	91 e0       	ldi	r25, 0x01	; 1
     d9e:	0e 94 68 09 	call	0x12d0	; 0x12d0 <strstr>
void LeerUbidots(){
	char *_index;
	char *_valor;
	LED_LEER_PARPADEO;
	GetTCP(&Cliente);//Envia el Request a ubidots
	_index=Buscar_ESP(&Cliente,"value");//busca la etiqueta value en la respuesta del servidor
     da2:	9a 83       	std	Y+2, r25	; 0x02
     da4:	89 83       	std	Y+1, r24	; 0x01
	if(_index!=NULL){
     da6:	89 2b       	or	r24, r25
     da8:	01 f1       	breq	.+64     	; 0xdea <LeerUbidots+0x72>
		SoftEnviarStr_P(PSTR("Valor Obtenido...\r\n"));
     daa:	8c e9       	ldi	r24, 0x9C	; 156
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
		_valor=strtok_r(_index+6,":}",&_index);//extrae el valor de la variable
     db2:	89 81       	ldd	r24, Y+1	; 0x01
     db4:	9a 81       	ldd	r25, Y+2	; 0x02
     db6:	ae 01       	movw	r20, r28
     db8:	4f 5f       	subi	r20, 0xFF	; 255
     dba:	5f 4f       	sbci	r21, 0xFF	; 255
     dbc:	6d e4       	ldi	r22, 0x4D	; 77
     dbe:	77 e0       	ldi	r23, 0x07	; 7
     dc0:	06 96       	adiw	r24, 0x06	; 6
     dc2:	0e 94 82 09 	call	0x1304	; 0x1304 <strtok_r>
     dc6:	8c 01       	movw	r16, r24
		SoftEnviarStr_P(PSTR("Angulo Servo:")),SoftEnviarStr(_valor),SoftEnviarStr_P(PSTR("\r\n"));
     dc8:	8e e8       	ldi	r24, 0x8E	; 142
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
     dd0:	c8 01       	movw	r24, r16
     dd2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <SoftEnviarStr>
     dd6:	8b e8       	ldi	r24, 0x8B	; 139
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
		MoverServo(atoi(_valor));
     dde:	c8 01       	movw	r24, r16
     de0:	0e 94 43 09 	call	0x1286	; 0x1286 <atoi>
     de4:	0e 94 a4 06 	call	0xd48	; 0xd48 <MoverServo>
     de8:	04 c0       	rjmp	.+8      	; 0xdf2 <LeerUbidots+0x7a>
	}else{
		SoftEnviarStr_P(PSTR("Error en solicitud de lectura...\r\n"));
     dea:	88 e6       	ldi	r24, 0x68	; 104
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 b3 02 	call	0x566	; 0x566 <SoftEnviarStr_P>
	}
	LED_LEER_PARPADEO;
     df2:	9b b1       	in	r25, 0x0b	; 11
     df4:	80 e1       	ldi	r24, 0x10	; 16
     df6:	89 27       	eor	r24, r25
     df8:	8b b9       	out	0x0b, r24	; 11
}
     dfa:	0f 90       	pop	r0
     dfc:	0f 90       	pop	r0
     dfe:	df 91       	pop	r29
     e00:	cf 91       	pop	r28
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	08 95       	ret

00000e08 <Inicia_Usart>:
*	Parametros: UBRR, valor que se obtine de F_CPU/16/BAUD-1
*
*	Descripcion: Esta funcion inicialializa y configura los registros de la comunicacion USART
****************************************************************************************/
void Inicia_Usart(unsigned char nserial,unsigned int baudios){
	DDRD|=(1<<PIND1);
     e08:	51 9a       	sbi	0x0a, 1	; 10
	DDRD&=~(1<<PIND0);
     e0a:	50 98       	cbi	0x0a, 0	; 10
	switch(nserial){
     e0c:	81 11       	cpse	r24, r1
     e0e:	0d c0       	rjmp	.+26     	; 0xe2a <Inicia_Usart+0x22>
		case 0:
		UCSR0A=(1<<U2X0);
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
		UCSR0B=(1<<RXEN0)|(1<<TXEN0);//activado recibir/transmitir datos, y la interrupcion de rx
     e16:	88 e1       	ldi	r24, 0x18	; 24
     e18:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
		UCSR0C = (3<<UCSZ00);//configura la trasnmision a 8bits, 1bit de stop
     e1c:	86 e0       	ldi	r24, 0x06	; 6
     e1e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
		UBRR0H = (unsigned char)(baudios>>8);
     e22:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
		UBRR0L= (unsigned char)baudios;//el valor de dividir Fosc/16(9600) y restarle 1se trasnmitira a 9600 con un reloj de 8Mhz
     e26:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     e2a:	08 95       	ret

00000e2c <leerCaracter_Usart>:
*	Parametros: Nada
*
*	Descripcion: Esta funcion lee el carater que recibe el microntrolador por medio de USART
****************************************************************************************/
unsigned char leerCaracter_Usart(unsigned char nserial){
	switch(nserial){
     e2c:	81 11       	cpse	r24, r1
     e2e:	08 c0       	rjmp	.+16     	; 0xe40 <leerCaracter_Usart+0x14>
		case 0:
		while ( !(UCSR0A & (1<<RXC0)) );//espera hasta que un nuevo caracter arribe
     e30:	e0 ec       	ldi	r30, 0xC0	; 192
     e32:	f0 e0       	ldi	r31, 0x00	; 0
     e34:	80 81       	ld	r24, Z
     e36:	88 23       	and	r24, r24
     e38:	ec f7       	brge	.-6      	; 0xe34 <leerCaracter_Usart+0x8>
		return UDR0;//devuelve el caracter que ha llegado por el puerto RX
     e3a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     e3e:	08 95       	ret
		//case 1:
		///*while ( !(UCSR1A & (1<<RXC1)) );//espera hasta que un nuevo caracter arribe
		//return UDR1;//devuelve el caracter que ha llegado por el puerto RX*/
		//break;
		default:
		return 0;
     e40:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     e42:	08 95       	ret

00000e44 <Env_Usart>:
*
*	Parametros: STR, que es la cadena o simbolo a ser enviado por medio de USART
*
*	Descripcion: Esta funcion envia una cadena o carater por medio del pin Tx de USART
****************************************************************************************/
void Env_Usart(unsigned char nserial,char *STR){
     e44:	cf 93       	push	r28
     e46:	df 93       	push	r29
	//unsigned int conteo=0;
	switch(nserial){
     e48:	81 11       	cpse	r24, r1
     e4a:	11 c0       	rjmp	.+34     	; 0xe6e <Env_Usart+0x2a>
		case 0:
		while (*STR!='\0')
     e4c:	fb 01       	movw	r30, r22
     e4e:	90 81       	ld	r25, Z
     e50:	99 23       	and	r25, r25
     e52:	69 f0       	breq	.+26     	; 0xe6e <Env_Usart+0x2a>
     e54:	db 01       	movw	r26, r22
     e56:	11 96       	adiw	r26, 0x01	; 1
		{
			while(!(UCSR0A & (1<<UDRE0)));//espera a que el dato enviado sea recibido antes de enviar otro
     e58:	e0 ec       	ldi	r30, 0xC0	; 192
     e5a:	f0 e0       	ldi	r31, 0x00	; 0
			UDR0=*STR++;//enviando la cadena dat
     e5c:	c6 ec       	ldi	r28, 0xC6	; 198
     e5e:	d0 e0       	ldi	r29, 0x00	; 0
	//unsigned int conteo=0;
	switch(nserial){
		case 0:
		while (*STR!='\0')
		{
			while(!(UCSR0A & (1<<UDRE0)));//espera a que el dato enviado sea recibido antes de enviar otro
     e60:	80 81       	ld	r24, Z
     e62:	85 ff       	sbrs	r24, 5
     e64:	fd cf       	rjmp	.-6      	; 0xe60 <Env_Usart+0x1c>
			UDR0=*STR++;//enviando la cadena dat
     e66:	98 83       	st	Y, r25
****************************************************************************************/
void Env_Usart(unsigned char nserial,char *STR){
	//unsigned int conteo=0;
	switch(nserial){
		case 0:
		while (*STR!='\0')
     e68:	9d 91       	ld	r25, X+
     e6a:	91 11       	cpse	r25, r1
     e6c:	f9 cf       	rjmp	.-14     	; 0xe60 <Env_Usart+0x1c>
			while(!(UCSR1A & (1<<UDRE1)));//espera a que el dato enviado sea recibido antes de enviar otro
			UDR1=*STR++;//enviando la cadena dat
		}*/
		break;
	}
}
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	08 95       	ret

00000e74 <Env_Usart_P>:
/*

*/
void Env_Usart_P(unsigned char nserial,const char *STR){
     e74:	cf 93       	push	r28
     e76:	df 93       	push	r29
	//unsigned int conteo=0;
	switch(nserial){
     e78:	81 11       	cpse	r24, r1
     e7a:	14 c0       	rjmp	.+40     	; 0xea4 <Env_Usart_P+0x30>
		case 0:
		while (pgm_read_byte(STR)!='\0')
     e7c:	fb 01       	movw	r30, r22
     e7e:	84 91       	lpm	r24, Z
     e80:	88 23       	and	r24, r24
     e82:	81 f0       	breq	.+32     	; 0xea4 <Env_Usart_P+0x30>
		{
			while(!(UCSR0A & (1<<UDRE0)));//espera a que el dato enviado sea recibido antes de enviar otro
     e84:	a0 ec       	ldi	r26, 0xC0	; 192
     e86:	b0 e0       	ldi	r27, 0x00	; 0
			UDR0=pgm_read_byte(STR++);//enviando la cadena dat
     e88:	c6 ec       	ldi	r28, 0xC6	; 198
     e8a:	d0 e0       	ldi	r29, 0x00	; 0
     e8c:	fb 01       	movw	r30, r22
	//unsigned int conteo=0;
	switch(nserial){
		case 0:
		while (pgm_read_byte(STR)!='\0')
		{
			while(!(UCSR0A & (1<<UDRE0)));//espera a que el dato enviado sea recibido antes de enviar otro
     e8e:	8c 91       	ld	r24, X
     e90:	85 ff       	sbrs	r24, 5
     e92:	fd cf       	rjmp	.-6      	; 0xe8e <Env_Usart_P+0x1a>
			UDR0=pgm_read_byte(STR++);//enviando la cadena dat
     e94:	6f 5f       	subi	r22, 0xFF	; 255
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	e4 91       	lpm	r30, Z
     e9a:	e8 83       	st	Y, r30
*/
void Env_Usart_P(unsigned char nserial,const char *STR){
	//unsigned int conteo=0;
	switch(nserial){
		case 0:
		while (pgm_read_byte(STR)!='\0')
     e9c:	fb 01       	movw	r30, r22
     e9e:	84 91       	lpm	r24, Z
     ea0:	81 11       	cpse	r24, r1
     ea2:	f4 cf       	rjmp	.-24     	; 0xe8c <Env_Usart_P+0x18>
			while(!(UCSR1A & (1<<UDRE1)));//espera a que el dato enviado sea recibido antes de enviar otro
			UDR1=pgm_read_byte(STR++);//enviando la cadena dat
		}*/
		break;
	}
}
     ea4:	df 91       	pop	r29
     ea6:	cf 91       	pop	r28
     ea8:	08 95       	ret

00000eaa <CaracterSinLeer_Usart>:
/*

*/
char CaracterSinLeer_Usart(unsigned char nserial){
	char Status=0;
	switch(nserial){
     eaa:	81 11       	cpse	r24, r1
     eac:	06 c0       	rjmp	.+12     	; 0xeba <CaracterSinLeer_Usart+0x10>
		case 0:
		return Status=LLEGO_UN_CARACTER_USART0?1:0;
     eae:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     eb2:	88 1f       	adc	r24, r24
     eb4:	88 27       	eor	r24, r24
     eb6:	88 1f       	adc	r24, r24
     eb8:	08 95       	ret
		break;
		/*case 1:
		//return Status=LLEGO_UN_CARACTER_USART1?1:0;
		break;*/
		default:
		return Status;
     eba:	80 e0       	ldi	r24, 0x00	; 0
		break;
	}
}
     ebc:	08 95       	ret

00000ebe <__subsf3>:
     ebe:	50 58       	subi	r21, 0x80	; 128

00000ec0 <__addsf3>:
     ec0:	bb 27       	eor	r27, r27
     ec2:	aa 27       	eor	r26, r26
     ec4:	0e 94 77 07 	call	0xeee	; 0xeee <__addsf3x>
     ec8:	0c 94 4f 08 	jmp	0x109e	; 0x109e <__fp_round>
     ecc:	0e 94 41 08 	call	0x1082	; 0x1082 <__fp_pscA>
     ed0:	38 f0       	brcs	.+14     	; 0xee0 <__addsf3+0x20>
     ed2:	0e 94 48 08 	call	0x1090	; 0x1090 <__fp_pscB>
     ed6:	20 f0       	brcs	.+8      	; 0xee0 <__addsf3+0x20>
     ed8:	39 f4       	brne	.+14     	; 0xee8 <__addsf3+0x28>
     eda:	9f 3f       	cpi	r25, 0xFF	; 255
     edc:	19 f4       	brne	.+6      	; 0xee4 <__addsf3+0x24>
     ede:	26 f4       	brtc	.+8      	; 0xee8 <__addsf3+0x28>
     ee0:	0c 94 3e 08 	jmp	0x107c	; 0x107c <__fp_nan>
     ee4:	0e f4       	brtc	.+2      	; 0xee8 <__addsf3+0x28>
     ee6:	e0 95       	com	r30
     ee8:	e7 fb       	bst	r30, 7
     eea:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__fp_inf>

00000eee <__addsf3x>:
     eee:	e9 2f       	mov	r30, r25
     ef0:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__fp_split3>
     ef4:	58 f3       	brcs	.-42     	; 0xecc <__addsf3+0xc>
     ef6:	ba 17       	cp	r27, r26
     ef8:	62 07       	cpc	r22, r18
     efa:	73 07       	cpc	r23, r19
     efc:	84 07       	cpc	r24, r20
     efe:	95 07       	cpc	r25, r21
     f00:	20 f0       	brcs	.+8      	; 0xf0a <__addsf3x+0x1c>
     f02:	79 f4       	brne	.+30     	; 0xf22 <__addsf3x+0x34>
     f04:	a6 f5       	brtc	.+104    	; 0xf6e <__addsf3x+0x80>
     f06:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_zero>
     f0a:	0e f4       	brtc	.+2      	; 0xf0e <__addsf3x+0x20>
     f0c:	e0 95       	com	r30
     f0e:	0b 2e       	mov	r0, r27
     f10:	ba 2f       	mov	r27, r26
     f12:	a0 2d       	mov	r26, r0
     f14:	0b 01       	movw	r0, r22
     f16:	b9 01       	movw	r22, r18
     f18:	90 01       	movw	r18, r0
     f1a:	0c 01       	movw	r0, r24
     f1c:	ca 01       	movw	r24, r20
     f1e:	a0 01       	movw	r20, r0
     f20:	11 24       	eor	r1, r1
     f22:	ff 27       	eor	r31, r31
     f24:	59 1b       	sub	r21, r25
     f26:	99 f0       	breq	.+38     	; 0xf4e <__addsf3x+0x60>
     f28:	59 3f       	cpi	r21, 0xF9	; 249
     f2a:	50 f4       	brcc	.+20     	; 0xf40 <__addsf3x+0x52>
     f2c:	50 3e       	cpi	r21, 0xE0	; 224
     f2e:	68 f1       	brcs	.+90     	; 0xf8a <__addsf3x+0x9c>
     f30:	1a 16       	cp	r1, r26
     f32:	f0 40       	sbci	r31, 0x00	; 0
     f34:	a2 2f       	mov	r26, r18
     f36:	23 2f       	mov	r18, r19
     f38:	34 2f       	mov	r19, r20
     f3a:	44 27       	eor	r20, r20
     f3c:	58 5f       	subi	r21, 0xF8	; 248
     f3e:	f3 cf       	rjmp	.-26     	; 0xf26 <__addsf3x+0x38>
     f40:	46 95       	lsr	r20
     f42:	37 95       	ror	r19
     f44:	27 95       	ror	r18
     f46:	a7 95       	ror	r26
     f48:	f0 40       	sbci	r31, 0x00	; 0
     f4a:	53 95       	inc	r21
     f4c:	c9 f7       	brne	.-14     	; 0xf40 <__addsf3x+0x52>
     f4e:	7e f4       	brtc	.+30     	; 0xf6e <__addsf3x+0x80>
     f50:	1f 16       	cp	r1, r31
     f52:	ba 0b       	sbc	r27, r26
     f54:	62 0b       	sbc	r22, r18
     f56:	73 0b       	sbc	r23, r19
     f58:	84 0b       	sbc	r24, r20
     f5a:	ba f0       	brmi	.+46     	; 0xf8a <__addsf3x+0x9c>
     f5c:	91 50       	subi	r25, 0x01	; 1
     f5e:	a1 f0       	breq	.+40     	; 0xf88 <__addsf3x+0x9a>
     f60:	ff 0f       	add	r31, r31
     f62:	bb 1f       	adc	r27, r27
     f64:	66 1f       	adc	r22, r22
     f66:	77 1f       	adc	r23, r23
     f68:	88 1f       	adc	r24, r24
     f6a:	c2 f7       	brpl	.-16     	; 0xf5c <__addsf3x+0x6e>
     f6c:	0e c0       	rjmp	.+28     	; 0xf8a <__addsf3x+0x9c>
     f6e:	ba 0f       	add	r27, r26
     f70:	62 1f       	adc	r22, r18
     f72:	73 1f       	adc	r23, r19
     f74:	84 1f       	adc	r24, r20
     f76:	48 f4       	brcc	.+18     	; 0xf8a <__addsf3x+0x9c>
     f78:	87 95       	ror	r24
     f7a:	77 95       	ror	r23
     f7c:	67 95       	ror	r22
     f7e:	b7 95       	ror	r27
     f80:	f7 95       	ror	r31
     f82:	9e 3f       	cpi	r25, 0xFE	; 254
     f84:	08 f0       	brcs	.+2      	; 0xf88 <__addsf3x+0x9a>
     f86:	b0 cf       	rjmp	.-160    	; 0xee8 <__addsf3+0x28>
     f88:	93 95       	inc	r25
     f8a:	88 0f       	add	r24, r24
     f8c:	08 f0       	brcs	.+2      	; 0xf90 <__addsf3x+0xa2>
     f8e:	99 27       	eor	r25, r25
     f90:	ee 0f       	add	r30, r30
     f92:	97 95       	ror	r25
     f94:	87 95       	ror	r24
     f96:	08 95       	ret

00000f98 <__fixunssfsi>:
     f98:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fp_splitA>
     f9c:	88 f0       	brcs	.+34     	; 0xfc0 <__fixunssfsi+0x28>
     f9e:	9f 57       	subi	r25, 0x7F	; 127
     fa0:	98 f0       	brcs	.+38     	; 0xfc8 <__fixunssfsi+0x30>
     fa2:	b9 2f       	mov	r27, r25
     fa4:	99 27       	eor	r25, r25
     fa6:	b7 51       	subi	r27, 0x17	; 23
     fa8:	b0 f0       	brcs	.+44     	; 0xfd6 <__fixunssfsi+0x3e>
     faa:	e1 f0       	breq	.+56     	; 0xfe4 <__fixunssfsi+0x4c>
     fac:	66 0f       	add	r22, r22
     fae:	77 1f       	adc	r23, r23
     fb0:	88 1f       	adc	r24, r24
     fb2:	99 1f       	adc	r25, r25
     fb4:	1a f0       	brmi	.+6      	; 0xfbc <__fixunssfsi+0x24>
     fb6:	ba 95       	dec	r27
     fb8:	c9 f7       	brne	.-14     	; 0xfac <__fixunssfsi+0x14>
     fba:	14 c0       	rjmp	.+40     	; 0xfe4 <__fixunssfsi+0x4c>
     fbc:	b1 30       	cpi	r27, 0x01	; 1
     fbe:	91 f0       	breq	.+36     	; 0xfe4 <__fixunssfsi+0x4c>
     fc0:	0e 94 82 08 	call	0x1104	; 0x1104 <__fp_zero>
     fc4:	b1 e0       	ldi	r27, 0x01	; 1
     fc6:	08 95       	ret
     fc8:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_zero>
     fcc:	67 2f       	mov	r22, r23
     fce:	78 2f       	mov	r23, r24
     fd0:	88 27       	eor	r24, r24
     fd2:	b8 5f       	subi	r27, 0xF8	; 248
     fd4:	39 f0       	breq	.+14     	; 0xfe4 <__fixunssfsi+0x4c>
     fd6:	b9 3f       	cpi	r27, 0xF9	; 249
     fd8:	cc f3       	brlt	.-14     	; 0xfcc <__fixunssfsi+0x34>
     fda:	86 95       	lsr	r24
     fdc:	77 95       	ror	r23
     fde:	67 95       	ror	r22
     fe0:	b3 95       	inc	r27
     fe2:	d9 f7       	brne	.-10     	; 0xfda <__fixunssfsi+0x42>
     fe4:	3e f4       	brtc	.+14     	; 0xff4 <__fixunssfsi+0x5c>
     fe6:	90 95       	com	r25
     fe8:	80 95       	com	r24
     fea:	70 95       	com	r23
     fec:	61 95       	neg	r22
     fee:	7f 4f       	sbci	r23, 0xFF	; 255
     ff0:	8f 4f       	sbci	r24, 0xFF	; 255
     ff2:	9f 4f       	sbci	r25, 0xFF	; 255
     ff4:	08 95       	ret

00000ff6 <__floatunsisf>:
     ff6:	e8 94       	clt
     ff8:	09 c0       	rjmp	.+18     	; 0x100c <__floatsisf+0x12>

00000ffa <__floatsisf>:
     ffa:	97 fb       	bst	r25, 7
     ffc:	3e f4       	brtc	.+14     	; 0x100c <__floatsisf+0x12>
     ffe:	90 95       	com	r25
    1000:	80 95       	com	r24
    1002:	70 95       	com	r23
    1004:	61 95       	neg	r22
    1006:	7f 4f       	sbci	r23, 0xFF	; 255
    1008:	8f 4f       	sbci	r24, 0xFF	; 255
    100a:	9f 4f       	sbci	r25, 0xFF	; 255
    100c:	99 23       	and	r25, r25
    100e:	a9 f0       	breq	.+42     	; 0x103a <__floatsisf+0x40>
    1010:	f9 2f       	mov	r31, r25
    1012:	96 e9       	ldi	r25, 0x96	; 150
    1014:	bb 27       	eor	r27, r27
    1016:	93 95       	inc	r25
    1018:	f6 95       	lsr	r31
    101a:	87 95       	ror	r24
    101c:	77 95       	ror	r23
    101e:	67 95       	ror	r22
    1020:	b7 95       	ror	r27
    1022:	f1 11       	cpse	r31, r1
    1024:	f8 cf       	rjmp	.-16     	; 0x1016 <__floatsisf+0x1c>
    1026:	fa f4       	brpl	.+62     	; 0x1066 <__floatsisf+0x6c>
    1028:	bb 0f       	add	r27, r27
    102a:	11 f4       	brne	.+4      	; 0x1030 <__floatsisf+0x36>
    102c:	60 ff       	sbrs	r22, 0
    102e:	1b c0       	rjmp	.+54     	; 0x1066 <__floatsisf+0x6c>
    1030:	6f 5f       	subi	r22, 0xFF	; 255
    1032:	7f 4f       	sbci	r23, 0xFF	; 255
    1034:	8f 4f       	sbci	r24, 0xFF	; 255
    1036:	9f 4f       	sbci	r25, 0xFF	; 255
    1038:	16 c0       	rjmp	.+44     	; 0x1066 <__floatsisf+0x6c>
    103a:	88 23       	and	r24, r24
    103c:	11 f0       	breq	.+4      	; 0x1042 <__floatsisf+0x48>
    103e:	96 e9       	ldi	r25, 0x96	; 150
    1040:	11 c0       	rjmp	.+34     	; 0x1064 <__floatsisf+0x6a>
    1042:	77 23       	and	r23, r23
    1044:	21 f0       	breq	.+8      	; 0x104e <__floatsisf+0x54>
    1046:	9e e8       	ldi	r25, 0x8E	; 142
    1048:	87 2f       	mov	r24, r23
    104a:	76 2f       	mov	r23, r22
    104c:	05 c0       	rjmp	.+10     	; 0x1058 <__floatsisf+0x5e>
    104e:	66 23       	and	r22, r22
    1050:	71 f0       	breq	.+28     	; 0x106e <__floatsisf+0x74>
    1052:	96 e8       	ldi	r25, 0x86	; 134
    1054:	86 2f       	mov	r24, r22
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	2a f0       	brmi	.+10     	; 0x1066 <__floatsisf+0x6c>
    105c:	9a 95       	dec	r25
    105e:	66 0f       	add	r22, r22
    1060:	77 1f       	adc	r23, r23
    1062:	88 1f       	adc	r24, r24
    1064:	da f7       	brpl	.-10     	; 0x105c <__floatsisf+0x62>
    1066:	88 0f       	add	r24, r24
    1068:	96 95       	lsr	r25
    106a:	87 95       	ror	r24
    106c:	97 f9       	bld	r25, 7
    106e:	08 95       	ret

00001070 <__fp_inf>:
    1070:	97 f9       	bld	r25, 7
    1072:	9f 67       	ori	r25, 0x7F	; 127
    1074:	80 e8       	ldi	r24, 0x80	; 128
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	60 e0       	ldi	r22, 0x00	; 0
    107a:	08 95       	ret

0000107c <__fp_nan>:
    107c:	9f ef       	ldi	r25, 0xFF	; 255
    107e:	80 ec       	ldi	r24, 0xC0	; 192
    1080:	08 95       	ret

00001082 <__fp_pscA>:
    1082:	00 24       	eor	r0, r0
    1084:	0a 94       	dec	r0
    1086:	16 16       	cp	r1, r22
    1088:	17 06       	cpc	r1, r23
    108a:	18 06       	cpc	r1, r24
    108c:	09 06       	cpc	r0, r25
    108e:	08 95       	ret

00001090 <__fp_pscB>:
    1090:	00 24       	eor	r0, r0
    1092:	0a 94       	dec	r0
    1094:	12 16       	cp	r1, r18
    1096:	13 06       	cpc	r1, r19
    1098:	14 06       	cpc	r1, r20
    109a:	05 06       	cpc	r0, r21
    109c:	08 95       	ret

0000109e <__fp_round>:
    109e:	09 2e       	mov	r0, r25
    10a0:	03 94       	inc	r0
    10a2:	00 0c       	add	r0, r0
    10a4:	11 f4       	brne	.+4      	; 0x10aa <__fp_round+0xc>
    10a6:	88 23       	and	r24, r24
    10a8:	52 f0       	brmi	.+20     	; 0x10be <__fp_round+0x20>
    10aa:	bb 0f       	add	r27, r27
    10ac:	40 f4       	brcc	.+16     	; 0x10be <__fp_round+0x20>
    10ae:	bf 2b       	or	r27, r31
    10b0:	11 f4       	brne	.+4      	; 0x10b6 <__fp_round+0x18>
    10b2:	60 ff       	sbrs	r22, 0
    10b4:	04 c0       	rjmp	.+8      	; 0x10be <__fp_round+0x20>
    10b6:	6f 5f       	subi	r22, 0xFF	; 255
    10b8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ba:	8f 4f       	sbci	r24, 0xFF	; 255
    10bc:	9f 4f       	sbci	r25, 0xFF	; 255
    10be:	08 95       	ret

000010c0 <__fp_split3>:
    10c0:	57 fd       	sbrc	r21, 7
    10c2:	90 58       	subi	r25, 0x80	; 128
    10c4:	44 0f       	add	r20, r20
    10c6:	55 1f       	adc	r21, r21
    10c8:	59 f0       	breq	.+22     	; 0x10e0 <__fp_splitA+0x10>
    10ca:	5f 3f       	cpi	r21, 0xFF	; 255
    10cc:	71 f0       	breq	.+28     	; 0x10ea <__fp_splitA+0x1a>
    10ce:	47 95       	ror	r20

000010d0 <__fp_splitA>:
    10d0:	88 0f       	add	r24, r24
    10d2:	97 fb       	bst	r25, 7
    10d4:	99 1f       	adc	r25, r25
    10d6:	61 f0       	breq	.+24     	; 0x10f0 <__fp_splitA+0x20>
    10d8:	9f 3f       	cpi	r25, 0xFF	; 255
    10da:	79 f0       	breq	.+30     	; 0x10fa <__fp_splitA+0x2a>
    10dc:	87 95       	ror	r24
    10de:	08 95       	ret
    10e0:	12 16       	cp	r1, r18
    10e2:	13 06       	cpc	r1, r19
    10e4:	14 06       	cpc	r1, r20
    10e6:	55 1f       	adc	r21, r21
    10e8:	f2 cf       	rjmp	.-28     	; 0x10ce <__fp_split3+0xe>
    10ea:	46 95       	lsr	r20
    10ec:	f1 df       	rcall	.-30     	; 0x10d0 <__fp_splitA>
    10ee:	08 c0       	rjmp	.+16     	; 0x1100 <__fp_splitA+0x30>
    10f0:	16 16       	cp	r1, r22
    10f2:	17 06       	cpc	r1, r23
    10f4:	18 06       	cpc	r1, r24
    10f6:	99 1f       	adc	r25, r25
    10f8:	f1 cf       	rjmp	.-30     	; 0x10dc <__fp_splitA+0xc>
    10fa:	86 95       	lsr	r24
    10fc:	71 05       	cpc	r23, r1
    10fe:	61 05       	cpc	r22, r1
    1100:	08 94       	sec
    1102:	08 95       	ret

00001104 <__fp_zero>:
    1104:	e8 94       	clt

00001106 <__fp_szero>:
    1106:	bb 27       	eor	r27, r27
    1108:	66 27       	eor	r22, r22
    110a:	77 27       	eor	r23, r23
    110c:	cb 01       	movw	r24, r22
    110e:	97 f9       	bld	r25, 7
    1110:	08 95       	ret

00001112 <__mulsf3>:
    1112:	0e 94 9c 08 	call	0x1138	; 0x1138 <__mulsf3x>
    1116:	0c 94 4f 08 	jmp	0x109e	; 0x109e <__fp_round>
    111a:	0e 94 41 08 	call	0x1082	; 0x1082 <__fp_pscA>
    111e:	38 f0       	brcs	.+14     	; 0x112e <__mulsf3+0x1c>
    1120:	0e 94 48 08 	call	0x1090	; 0x1090 <__fp_pscB>
    1124:	20 f0       	brcs	.+8      	; 0x112e <__mulsf3+0x1c>
    1126:	95 23       	and	r25, r21
    1128:	11 f0       	breq	.+4      	; 0x112e <__mulsf3+0x1c>
    112a:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__fp_inf>
    112e:	0c 94 3e 08 	jmp	0x107c	; 0x107c <__fp_nan>
    1132:	11 24       	eor	r1, r1
    1134:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__fp_szero>

00001138 <__mulsf3x>:
    1138:	0e 94 60 08 	call	0x10c0	; 0x10c0 <__fp_split3>
    113c:	70 f3       	brcs	.-36     	; 0x111a <__mulsf3+0x8>

0000113e <__mulsf3_pse>:
    113e:	95 9f       	mul	r25, r21
    1140:	c1 f3       	breq	.-16     	; 0x1132 <__mulsf3+0x20>
    1142:	95 0f       	add	r25, r21
    1144:	50 e0       	ldi	r21, 0x00	; 0
    1146:	55 1f       	adc	r21, r21
    1148:	62 9f       	mul	r22, r18
    114a:	f0 01       	movw	r30, r0
    114c:	72 9f       	mul	r23, r18
    114e:	bb 27       	eor	r27, r27
    1150:	f0 0d       	add	r31, r0
    1152:	b1 1d       	adc	r27, r1
    1154:	63 9f       	mul	r22, r19
    1156:	aa 27       	eor	r26, r26
    1158:	f0 0d       	add	r31, r0
    115a:	b1 1d       	adc	r27, r1
    115c:	aa 1f       	adc	r26, r26
    115e:	64 9f       	mul	r22, r20
    1160:	66 27       	eor	r22, r22
    1162:	b0 0d       	add	r27, r0
    1164:	a1 1d       	adc	r26, r1
    1166:	66 1f       	adc	r22, r22
    1168:	82 9f       	mul	r24, r18
    116a:	22 27       	eor	r18, r18
    116c:	b0 0d       	add	r27, r0
    116e:	a1 1d       	adc	r26, r1
    1170:	62 1f       	adc	r22, r18
    1172:	73 9f       	mul	r23, r19
    1174:	b0 0d       	add	r27, r0
    1176:	a1 1d       	adc	r26, r1
    1178:	62 1f       	adc	r22, r18
    117a:	83 9f       	mul	r24, r19
    117c:	a0 0d       	add	r26, r0
    117e:	61 1d       	adc	r22, r1
    1180:	22 1f       	adc	r18, r18
    1182:	74 9f       	mul	r23, r20
    1184:	33 27       	eor	r19, r19
    1186:	a0 0d       	add	r26, r0
    1188:	61 1d       	adc	r22, r1
    118a:	23 1f       	adc	r18, r19
    118c:	84 9f       	mul	r24, r20
    118e:	60 0d       	add	r22, r0
    1190:	21 1d       	adc	r18, r1
    1192:	82 2f       	mov	r24, r18
    1194:	76 2f       	mov	r23, r22
    1196:	6a 2f       	mov	r22, r26
    1198:	11 24       	eor	r1, r1
    119a:	9f 57       	subi	r25, 0x7F	; 127
    119c:	50 40       	sbci	r21, 0x00	; 0
    119e:	9a f0       	brmi	.+38     	; 0x11c6 <__mulsf3_pse+0x88>
    11a0:	f1 f0       	breq	.+60     	; 0x11de <__mulsf3_pse+0xa0>
    11a2:	88 23       	and	r24, r24
    11a4:	4a f0       	brmi	.+18     	; 0x11b8 <__mulsf3_pse+0x7a>
    11a6:	ee 0f       	add	r30, r30
    11a8:	ff 1f       	adc	r31, r31
    11aa:	bb 1f       	adc	r27, r27
    11ac:	66 1f       	adc	r22, r22
    11ae:	77 1f       	adc	r23, r23
    11b0:	88 1f       	adc	r24, r24
    11b2:	91 50       	subi	r25, 0x01	; 1
    11b4:	50 40       	sbci	r21, 0x00	; 0
    11b6:	a9 f7       	brne	.-22     	; 0x11a2 <__mulsf3_pse+0x64>
    11b8:	9e 3f       	cpi	r25, 0xFE	; 254
    11ba:	51 05       	cpc	r21, r1
    11bc:	80 f0       	brcs	.+32     	; 0x11de <__mulsf3_pse+0xa0>
    11be:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__fp_inf>
    11c2:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__fp_szero>
    11c6:	5f 3f       	cpi	r21, 0xFF	; 255
    11c8:	e4 f3       	brlt	.-8      	; 0x11c2 <__mulsf3_pse+0x84>
    11ca:	98 3e       	cpi	r25, 0xE8	; 232
    11cc:	d4 f3       	brlt	.-12     	; 0x11c2 <__mulsf3_pse+0x84>
    11ce:	86 95       	lsr	r24
    11d0:	77 95       	ror	r23
    11d2:	67 95       	ror	r22
    11d4:	b7 95       	ror	r27
    11d6:	f7 95       	ror	r31
    11d8:	e7 95       	ror	r30
    11da:	9f 5f       	subi	r25, 0xFF	; 255
    11dc:	c1 f7       	brne	.-16     	; 0x11ce <__mulsf3_pse+0x90>
    11de:	fe 2b       	or	r31, r30
    11e0:	88 0f       	add	r24, r24
    11e2:	91 1d       	adc	r25, r1
    11e4:	96 95       	lsr	r25
    11e6:	87 95       	ror	r24
    11e8:	97 f9       	bld	r25, 7
    11ea:	08 95       	ret

000011ec <round>:
    11ec:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fp_splitA>
    11f0:	e8 f0       	brcs	.+58     	; 0x122c <round+0x40>
    11f2:	9e 37       	cpi	r25, 0x7E	; 126
    11f4:	e8 f0       	brcs	.+58     	; 0x1230 <round+0x44>
    11f6:	96 39       	cpi	r25, 0x96	; 150
    11f8:	b8 f4       	brcc	.+46     	; 0x1228 <round+0x3c>
    11fa:	9e 38       	cpi	r25, 0x8E	; 142
    11fc:	48 f4       	brcc	.+18     	; 0x1210 <round+0x24>
    11fe:	67 2f       	mov	r22, r23
    1200:	78 2f       	mov	r23, r24
    1202:	88 27       	eor	r24, r24
    1204:	98 5f       	subi	r25, 0xF8	; 248
    1206:	f9 cf       	rjmp	.-14     	; 0x11fa <round+0xe>
    1208:	86 95       	lsr	r24
    120a:	77 95       	ror	r23
    120c:	67 95       	ror	r22
    120e:	93 95       	inc	r25
    1210:	95 39       	cpi	r25, 0x95	; 149
    1212:	d0 f3       	brcs	.-12     	; 0x1208 <round+0x1c>
    1214:	b6 2f       	mov	r27, r22
    1216:	b1 70       	andi	r27, 0x01	; 1
    1218:	6b 0f       	add	r22, r27
    121a:	71 1d       	adc	r23, r1
    121c:	81 1d       	adc	r24, r1
    121e:	20 f4       	brcc	.+8      	; 0x1228 <round+0x3c>
    1220:	87 95       	ror	r24
    1222:	77 95       	ror	r23
    1224:	67 95       	ror	r22
    1226:	93 95       	inc	r25
    1228:	0c 94 1a 09 	jmp	0x1234	; 0x1234 <__fp_mintl>
    122c:	0c 94 35 09 	jmp	0x126a	; 0x126a <__fp_mpack>
    1230:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__fp_szero>

00001234 <__fp_mintl>:
    1234:	88 23       	and	r24, r24
    1236:	71 f4       	brne	.+28     	; 0x1254 <__fp_mintl+0x20>
    1238:	77 23       	and	r23, r23
    123a:	21 f0       	breq	.+8      	; 0x1244 <__fp_mintl+0x10>
    123c:	98 50       	subi	r25, 0x08	; 8
    123e:	87 2b       	or	r24, r23
    1240:	76 2f       	mov	r23, r22
    1242:	07 c0       	rjmp	.+14     	; 0x1252 <__fp_mintl+0x1e>
    1244:	66 23       	and	r22, r22
    1246:	11 f4       	brne	.+4      	; 0x124c <__fp_mintl+0x18>
    1248:	99 27       	eor	r25, r25
    124a:	0d c0       	rjmp	.+26     	; 0x1266 <__fp_mintl+0x32>
    124c:	90 51       	subi	r25, 0x10	; 16
    124e:	86 2b       	or	r24, r22
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	60 e0       	ldi	r22, 0x00	; 0
    1254:	2a f0       	brmi	.+10     	; 0x1260 <__fp_mintl+0x2c>
    1256:	9a 95       	dec	r25
    1258:	66 0f       	add	r22, r22
    125a:	77 1f       	adc	r23, r23
    125c:	88 1f       	adc	r24, r24
    125e:	da f7       	brpl	.-10     	; 0x1256 <__fp_mintl+0x22>
    1260:	88 0f       	add	r24, r24
    1262:	96 95       	lsr	r25
    1264:	87 95       	ror	r24
    1266:	97 f9       	bld	r25, 7
    1268:	08 95       	ret

0000126a <__fp_mpack>:
    126a:	9f 3f       	cpi	r25, 0xFF	; 255
    126c:	31 f0       	breq	.+12     	; 0x127a <__fp_mpack_finite+0xc>

0000126e <__fp_mpack_finite>:
    126e:	91 50       	subi	r25, 0x01	; 1
    1270:	20 f4       	brcc	.+8      	; 0x127a <__fp_mpack_finite+0xc>
    1272:	87 95       	ror	r24
    1274:	77 95       	ror	r23
    1276:	67 95       	ror	r22
    1278:	b7 95       	ror	r27
    127a:	88 0f       	add	r24, r24
    127c:	91 1d       	adc	r25, r1
    127e:	96 95       	lsr	r25
    1280:	87 95       	ror	r24
    1282:	97 f9       	bld	r25, 7
    1284:	08 95       	ret

00001286 <atoi>:
    1286:	fc 01       	movw	r30, r24
    1288:	88 27       	eor	r24, r24
    128a:	99 27       	eor	r25, r25
    128c:	e8 94       	clt
    128e:	21 91       	ld	r18, Z+
    1290:	20 32       	cpi	r18, 0x20	; 32
    1292:	e9 f3       	breq	.-6      	; 0x128e <atoi+0x8>
    1294:	29 30       	cpi	r18, 0x09	; 9
    1296:	10 f0       	brcs	.+4      	; 0x129c <atoi+0x16>
    1298:	2e 30       	cpi	r18, 0x0E	; 14
    129a:	c8 f3       	brcs	.-14     	; 0x128e <atoi+0x8>
    129c:	2b 32       	cpi	r18, 0x2B	; 43
    129e:	41 f0       	breq	.+16     	; 0x12b0 <atoi+0x2a>
    12a0:	2d 32       	cpi	r18, 0x2D	; 45
    12a2:	39 f4       	brne	.+14     	; 0x12b2 <atoi+0x2c>
    12a4:	68 94       	set
    12a6:	04 c0       	rjmp	.+8      	; 0x12b0 <atoi+0x2a>
    12a8:	0e 94 a9 09 	call	0x1352	; 0x1352 <__mulhi_const_10>
    12ac:	82 0f       	add	r24, r18
    12ae:	91 1d       	adc	r25, r1
    12b0:	21 91       	ld	r18, Z+
    12b2:	20 53       	subi	r18, 0x30	; 48
    12b4:	2a 30       	cpi	r18, 0x0A	; 10
    12b6:	c0 f3       	brcs	.-16     	; 0x12a8 <atoi+0x22>
    12b8:	1e f4       	brtc	.+6      	; 0x12c0 <atoi+0x3a>
    12ba:	90 95       	com	r25
    12bc:	81 95       	neg	r24
    12be:	9f 4f       	sbci	r25, 0xFF	; 255
    12c0:	08 95       	ret

000012c2 <strcpy>:
    12c2:	fb 01       	movw	r30, r22
    12c4:	dc 01       	movw	r26, r24
    12c6:	01 90       	ld	r0, Z+
    12c8:	0d 92       	st	X+, r0
    12ca:	00 20       	and	r0, r0
    12cc:	e1 f7       	brne	.-8      	; 0x12c6 <strcpy+0x4>
    12ce:	08 95       	ret

000012d0 <strstr>:
    12d0:	fb 01       	movw	r30, r22
    12d2:	51 91       	ld	r21, Z+
    12d4:	55 23       	and	r21, r21
    12d6:	a9 f0       	breq	.+42     	; 0x1302 <strstr+0x32>
    12d8:	bf 01       	movw	r22, r30
    12da:	dc 01       	movw	r26, r24
    12dc:	4d 91       	ld	r20, X+
    12de:	45 17       	cp	r20, r21
    12e0:	41 11       	cpse	r20, r1
    12e2:	e1 f7       	brne	.-8      	; 0x12dc <strstr+0xc>
    12e4:	59 f4       	brne	.+22     	; 0x12fc <strstr+0x2c>
    12e6:	cd 01       	movw	r24, r26
    12e8:	01 90       	ld	r0, Z+
    12ea:	00 20       	and	r0, r0
    12ec:	49 f0       	breq	.+18     	; 0x1300 <strstr+0x30>
    12ee:	4d 91       	ld	r20, X+
    12f0:	40 15       	cp	r20, r0
    12f2:	41 11       	cpse	r20, r1
    12f4:	c9 f3       	breq	.-14     	; 0x12e8 <strstr+0x18>
    12f6:	fb 01       	movw	r30, r22
    12f8:	41 11       	cpse	r20, r1
    12fa:	ef cf       	rjmp	.-34     	; 0x12da <strstr+0xa>
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	01 97       	sbiw	r24, 0x01	; 1
    1302:	08 95       	ret

00001304 <strtok_r>:
    1304:	fa 01       	movw	r30, r20
    1306:	a1 91       	ld	r26, Z+
    1308:	b0 81       	ld	r27, Z
    130a:	00 97       	sbiw	r24, 0x00	; 0
    130c:	19 f4       	brne	.+6      	; 0x1314 <strtok_r+0x10>
    130e:	10 97       	sbiw	r26, 0x00	; 0
    1310:	e1 f0       	breq	.+56     	; 0x134a <strtok_r+0x46>
    1312:	cd 01       	movw	r24, r26
    1314:	dc 01       	movw	r26, r24
    1316:	cd 01       	movw	r24, r26
    1318:	0d 90       	ld	r0, X+
    131a:	00 20       	and	r0, r0
    131c:	11 f4       	brne	.+4      	; 0x1322 <strtok_r+0x1e>
    131e:	c0 01       	movw	r24, r0
    1320:	13 c0       	rjmp	.+38     	; 0x1348 <strtok_r+0x44>
    1322:	fb 01       	movw	r30, r22
    1324:	21 91       	ld	r18, Z+
    1326:	22 23       	and	r18, r18
    1328:	19 f0       	breq	.+6      	; 0x1330 <strtok_r+0x2c>
    132a:	20 15       	cp	r18, r0
    132c:	d9 f7       	brne	.-10     	; 0x1324 <strtok_r+0x20>
    132e:	f3 cf       	rjmp	.-26     	; 0x1316 <strtok_r+0x12>
    1330:	fb 01       	movw	r30, r22
    1332:	21 91       	ld	r18, Z+
    1334:	20 15       	cp	r18, r0
    1336:	19 f4       	brne	.+6      	; 0x133e <strtok_r+0x3a>
    1338:	1e 92       	st	-X, r1
    133a:	11 96       	adiw	r26, 0x01	; 1
    133c:	06 c0       	rjmp	.+12     	; 0x134a <strtok_r+0x46>
    133e:	22 23       	and	r18, r18
    1340:	c1 f7       	brne	.-16     	; 0x1332 <strtok_r+0x2e>
    1342:	0d 90       	ld	r0, X+
    1344:	00 20       	and	r0, r0
    1346:	a1 f7       	brne	.-24     	; 0x1330 <strtok_r+0x2c>
    1348:	d0 01       	movw	r26, r0
    134a:	fa 01       	movw	r30, r20
    134c:	a1 93       	st	Z+, r26
    134e:	b0 83       	st	Z, r27
    1350:	08 95       	ret

00001352 <__mulhi_const_10>:
    1352:	7a e0       	ldi	r23, 0x0A	; 10
    1354:	97 9f       	mul	r25, r23
    1356:	90 2d       	mov	r25, r0
    1358:	87 9f       	mul	r24, r23
    135a:	80 2d       	mov	r24, r0
    135c:	91 0d       	add	r25, r1
    135e:	11 24       	eor	r1, r1
    1360:	08 95       	ret

00001362 <sprintf_P>:
    1362:	ae e0       	ldi	r26, 0x0E	; 14
    1364:	b0 e0       	ldi	r27, 0x00	; 0
    1366:	e7 eb       	ldi	r30, 0xB7	; 183
    1368:	f9 e0       	ldi	r31, 0x09	; 9
    136a:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__prologue_saves__+0x1c>
    136e:	0d 89       	ldd	r16, Y+21	; 0x15
    1370:	1e 89       	ldd	r17, Y+22	; 0x16
    1372:	8e e0       	ldi	r24, 0x0E	; 14
    1374:	8c 83       	std	Y+4, r24	; 0x04
    1376:	1a 83       	std	Y+2, r17	; 0x02
    1378:	09 83       	std	Y+1, r16	; 0x01
    137a:	8f ef       	ldi	r24, 0xFF	; 255
    137c:	9f e7       	ldi	r25, 0x7F	; 127
    137e:	9e 83       	std	Y+6, r25	; 0x06
    1380:	8d 83       	std	Y+5, r24	; 0x05
    1382:	ae 01       	movw	r20, r28
    1384:	47 5e       	subi	r20, 0xE7	; 231
    1386:	5f 4f       	sbci	r21, 0xFF	; 255
    1388:	6f 89       	ldd	r22, Y+23	; 0x17
    138a:	78 8d       	ldd	r23, Y+24	; 0x18
    138c:	ce 01       	movw	r24, r28
    138e:	01 96       	adiw	r24, 0x01	; 1
    1390:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <vfprintf>
    1394:	ef 81       	ldd	r30, Y+7	; 0x07
    1396:	f8 85       	ldd	r31, Y+8	; 0x08
    1398:	e0 0f       	add	r30, r16
    139a:	f1 1f       	adc	r31, r17
    139c:	10 82       	st	Z, r1
    139e:	2e 96       	adiw	r28, 0x0e	; 14
    13a0:	e4 e0       	ldi	r30, 0x04	; 4
    13a2:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__epilogue_restores__+0x1c>

000013a6 <vfprintf>:
    13a6:	ab e0       	ldi	r26, 0x0B	; 11
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	e9 ed       	ldi	r30, 0xD9	; 217
    13ac:	f9 e0       	ldi	r31, 0x09	; 9
    13ae:	0c 94 64 0c 	jmp	0x18c8	; 0x18c8 <__prologue_saves__>
    13b2:	6c 01       	movw	r12, r24
    13b4:	7b 01       	movw	r14, r22
    13b6:	8a 01       	movw	r16, r20
    13b8:	fc 01       	movw	r30, r24
    13ba:	17 82       	std	Z+7, r1	; 0x07
    13bc:	16 82       	std	Z+6, r1	; 0x06
    13be:	83 81       	ldd	r24, Z+3	; 0x03
    13c0:	81 ff       	sbrs	r24, 1
    13c2:	cc c1       	rjmp	.+920    	; 0x175c <vfprintf+0x3b6>
    13c4:	ce 01       	movw	r24, r28
    13c6:	01 96       	adiw	r24, 0x01	; 1
    13c8:	3c 01       	movw	r6, r24
    13ca:	f6 01       	movw	r30, r12
    13cc:	93 81       	ldd	r25, Z+3	; 0x03
    13ce:	f7 01       	movw	r30, r14
    13d0:	93 fd       	sbrc	r25, 3
    13d2:	85 91       	lpm	r24, Z+
    13d4:	93 ff       	sbrs	r25, 3
    13d6:	81 91       	ld	r24, Z+
    13d8:	7f 01       	movw	r14, r30
    13da:	88 23       	and	r24, r24
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <vfprintf+0x3a>
    13de:	ba c1       	rjmp	.+884    	; 0x1754 <vfprintf+0x3ae>
    13e0:	85 32       	cpi	r24, 0x25	; 37
    13e2:	39 f4       	brne	.+14     	; 0x13f2 <vfprintf+0x4c>
    13e4:	93 fd       	sbrc	r25, 3
    13e6:	85 91       	lpm	r24, Z+
    13e8:	93 ff       	sbrs	r25, 3
    13ea:	81 91       	ld	r24, Z+
    13ec:	7f 01       	movw	r14, r30
    13ee:	85 32       	cpi	r24, 0x25	; 37
    13f0:	29 f4       	brne	.+10     	; 0x13fc <vfprintf+0x56>
    13f2:	b6 01       	movw	r22, r12
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    13fa:	e7 cf       	rjmp	.-50     	; 0x13ca <vfprintf+0x24>
    13fc:	91 2c       	mov	r9, r1
    13fe:	21 2c       	mov	r2, r1
    1400:	31 2c       	mov	r3, r1
    1402:	ff e1       	ldi	r31, 0x1F	; 31
    1404:	f3 15       	cp	r31, r3
    1406:	d8 f0       	brcs	.+54     	; 0x143e <vfprintf+0x98>
    1408:	8b 32       	cpi	r24, 0x2B	; 43
    140a:	79 f0       	breq	.+30     	; 0x142a <vfprintf+0x84>
    140c:	38 f4       	brcc	.+14     	; 0x141c <vfprintf+0x76>
    140e:	80 32       	cpi	r24, 0x20	; 32
    1410:	79 f0       	breq	.+30     	; 0x1430 <vfprintf+0x8a>
    1412:	83 32       	cpi	r24, 0x23	; 35
    1414:	a1 f4       	brne	.+40     	; 0x143e <vfprintf+0x98>
    1416:	23 2d       	mov	r18, r3
    1418:	20 61       	ori	r18, 0x10	; 16
    141a:	1d c0       	rjmp	.+58     	; 0x1456 <vfprintf+0xb0>
    141c:	8d 32       	cpi	r24, 0x2D	; 45
    141e:	61 f0       	breq	.+24     	; 0x1438 <vfprintf+0x92>
    1420:	80 33       	cpi	r24, 0x30	; 48
    1422:	69 f4       	brne	.+26     	; 0x143e <vfprintf+0x98>
    1424:	23 2d       	mov	r18, r3
    1426:	21 60       	ori	r18, 0x01	; 1
    1428:	16 c0       	rjmp	.+44     	; 0x1456 <vfprintf+0xb0>
    142a:	83 2d       	mov	r24, r3
    142c:	82 60       	ori	r24, 0x02	; 2
    142e:	38 2e       	mov	r3, r24
    1430:	e3 2d       	mov	r30, r3
    1432:	e4 60       	ori	r30, 0x04	; 4
    1434:	3e 2e       	mov	r3, r30
    1436:	2a c0       	rjmp	.+84     	; 0x148c <vfprintf+0xe6>
    1438:	f3 2d       	mov	r31, r3
    143a:	f8 60       	ori	r31, 0x08	; 8
    143c:	1d c0       	rjmp	.+58     	; 0x1478 <vfprintf+0xd2>
    143e:	37 fc       	sbrc	r3, 7
    1440:	2d c0       	rjmp	.+90     	; 0x149c <vfprintf+0xf6>
    1442:	20 ed       	ldi	r18, 0xD0	; 208
    1444:	28 0f       	add	r18, r24
    1446:	2a 30       	cpi	r18, 0x0A	; 10
    1448:	40 f0       	brcs	.+16     	; 0x145a <vfprintf+0xb4>
    144a:	8e 32       	cpi	r24, 0x2E	; 46
    144c:	b9 f4       	brne	.+46     	; 0x147c <vfprintf+0xd6>
    144e:	36 fc       	sbrc	r3, 6
    1450:	81 c1       	rjmp	.+770    	; 0x1754 <vfprintf+0x3ae>
    1452:	23 2d       	mov	r18, r3
    1454:	20 64       	ori	r18, 0x40	; 64
    1456:	32 2e       	mov	r3, r18
    1458:	19 c0       	rjmp	.+50     	; 0x148c <vfprintf+0xe6>
    145a:	36 fe       	sbrs	r3, 6
    145c:	06 c0       	rjmp	.+12     	; 0x146a <vfprintf+0xc4>
    145e:	8a e0       	ldi	r24, 0x0A	; 10
    1460:	98 9e       	mul	r9, r24
    1462:	20 0d       	add	r18, r0
    1464:	11 24       	eor	r1, r1
    1466:	92 2e       	mov	r9, r18
    1468:	11 c0       	rjmp	.+34     	; 0x148c <vfprintf+0xe6>
    146a:	ea e0       	ldi	r30, 0x0A	; 10
    146c:	2e 9e       	mul	r2, r30
    146e:	20 0d       	add	r18, r0
    1470:	11 24       	eor	r1, r1
    1472:	22 2e       	mov	r2, r18
    1474:	f3 2d       	mov	r31, r3
    1476:	f0 62       	ori	r31, 0x20	; 32
    1478:	3f 2e       	mov	r3, r31
    147a:	08 c0       	rjmp	.+16     	; 0x148c <vfprintf+0xe6>
    147c:	8c 36       	cpi	r24, 0x6C	; 108
    147e:	21 f4       	brne	.+8      	; 0x1488 <vfprintf+0xe2>
    1480:	83 2d       	mov	r24, r3
    1482:	80 68       	ori	r24, 0x80	; 128
    1484:	38 2e       	mov	r3, r24
    1486:	02 c0       	rjmp	.+4      	; 0x148c <vfprintf+0xe6>
    1488:	88 36       	cpi	r24, 0x68	; 104
    148a:	41 f4       	brne	.+16     	; 0x149c <vfprintf+0xf6>
    148c:	f7 01       	movw	r30, r14
    148e:	93 fd       	sbrc	r25, 3
    1490:	85 91       	lpm	r24, Z+
    1492:	93 ff       	sbrs	r25, 3
    1494:	81 91       	ld	r24, Z+
    1496:	7f 01       	movw	r14, r30
    1498:	81 11       	cpse	r24, r1
    149a:	b3 cf       	rjmp	.-154    	; 0x1402 <vfprintf+0x5c>
    149c:	98 2f       	mov	r25, r24
    149e:	9f 7d       	andi	r25, 0xDF	; 223
    14a0:	95 54       	subi	r25, 0x45	; 69
    14a2:	93 30       	cpi	r25, 0x03	; 3
    14a4:	28 f4       	brcc	.+10     	; 0x14b0 <vfprintf+0x10a>
    14a6:	0c 5f       	subi	r16, 0xFC	; 252
    14a8:	1f 4f       	sbci	r17, 0xFF	; 255
    14aa:	9f e3       	ldi	r25, 0x3F	; 63
    14ac:	99 83       	std	Y+1, r25	; 0x01
    14ae:	0d c0       	rjmp	.+26     	; 0x14ca <vfprintf+0x124>
    14b0:	83 36       	cpi	r24, 0x63	; 99
    14b2:	31 f0       	breq	.+12     	; 0x14c0 <vfprintf+0x11a>
    14b4:	83 37       	cpi	r24, 0x73	; 115
    14b6:	71 f0       	breq	.+28     	; 0x14d4 <vfprintf+0x12e>
    14b8:	83 35       	cpi	r24, 0x53	; 83
    14ba:	09 f0       	breq	.+2      	; 0x14be <vfprintf+0x118>
    14bc:	59 c0       	rjmp	.+178    	; 0x1570 <vfprintf+0x1ca>
    14be:	21 c0       	rjmp	.+66     	; 0x1502 <vfprintf+0x15c>
    14c0:	f8 01       	movw	r30, r16
    14c2:	80 81       	ld	r24, Z
    14c4:	89 83       	std	Y+1, r24	; 0x01
    14c6:	0e 5f       	subi	r16, 0xFE	; 254
    14c8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ca:	88 24       	eor	r8, r8
    14cc:	83 94       	inc	r8
    14ce:	91 2c       	mov	r9, r1
    14d0:	53 01       	movw	r10, r6
    14d2:	13 c0       	rjmp	.+38     	; 0x14fa <vfprintf+0x154>
    14d4:	28 01       	movw	r4, r16
    14d6:	f2 e0       	ldi	r31, 0x02	; 2
    14d8:	4f 0e       	add	r4, r31
    14da:	51 1c       	adc	r5, r1
    14dc:	f8 01       	movw	r30, r16
    14de:	a0 80       	ld	r10, Z
    14e0:	b1 80       	ldd	r11, Z+1	; 0x01
    14e2:	36 fe       	sbrs	r3, 6
    14e4:	03 c0       	rjmp	.+6      	; 0x14ec <vfprintf+0x146>
    14e6:	69 2d       	mov	r22, r9
    14e8:	70 e0       	ldi	r23, 0x00	; 0
    14ea:	02 c0       	rjmp	.+4      	; 0x14f0 <vfprintf+0x14a>
    14ec:	6f ef       	ldi	r22, 0xFF	; 255
    14ee:	7f ef       	ldi	r23, 0xFF	; 255
    14f0:	c5 01       	movw	r24, r10
    14f2:	0e 94 bf 0b 	call	0x177e	; 0x177e <strnlen>
    14f6:	4c 01       	movw	r8, r24
    14f8:	82 01       	movw	r16, r4
    14fa:	f3 2d       	mov	r31, r3
    14fc:	ff 77       	andi	r31, 0x7F	; 127
    14fe:	3f 2e       	mov	r3, r31
    1500:	16 c0       	rjmp	.+44     	; 0x152e <vfprintf+0x188>
    1502:	28 01       	movw	r4, r16
    1504:	22 e0       	ldi	r18, 0x02	; 2
    1506:	42 0e       	add	r4, r18
    1508:	51 1c       	adc	r5, r1
    150a:	f8 01       	movw	r30, r16
    150c:	a0 80       	ld	r10, Z
    150e:	b1 80       	ldd	r11, Z+1	; 0x01
    1510:	36 fe       	sbrs	r3, 6
    1512:	03 c0       	rjmp	.+6      	; 0x151a <vfprintf+0x174>
    1514:	69 2d       	mov	r22, r9
    1516:	70 e0       	ldi	r23, 0x00	; 0
    1518:	02 c0       	rjmp	.+4      	; 0x151e <vfprintf+0x178>
    151a:	6f ef       	ldi	r22, 0xFF	; 255
    151c:	7f ef       	ldi	r23, 0xFF	; 255
    151e:	c5 01       	movw	r24, r10
    1520:	0e 94 b4 0b 	call	0x1768	; 0x1768 <strnlen_P>
    1524:	4c 01       	movw	r8, r24
    1526:	f3 2d       	mov	r31, r3
    1528:	f0 68       	ori	r31, 0x80	; 128
    152a:	3f 2e       	mov	r3, r31
    152c:	82 01       	movw	r16, r4
    152e:	33 fc       	sbrc	r3, 3
    1530:	1b c0       	rjmp	.+54     	; 0x1568 <vfprintf+0x1c2>
    1532:	82 2d       	mov	r24, r2
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	88 16       	cp	r8, r24
    1538:	99 06       	cpc	r9, r25
    153a:	b0 f4       	brcc	.+44     	; 0x1568 <vfprintf+0x1c2>
    153c:	b6 01       	movw	r22, r12
    153e:	80 e2       	ldi	r24, 0x20	; 32
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    1546:	2a 94       	dec	r2
    1548:	f4 cf       	rjmp	.-24     	; 0x1532 <vfprintf+0x18c>
    154a:	f5 01       	movw	r30, r10
    154c:	37 fc       	sbrc	r3, 7
    154e:	85 91       	lpm	r24, Z+
    1550:	37 fe       	sbrs	r3, 7
    1552:	81 91       	ld	r24, Z+
    1554:	5f 01       	movw	r10, r30
    1556:	b6 01       	movw	r22, r12
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    155e:	21 10       	cpse	r2, r1
    1560:	2a 94       	dec	r2
    1562:	21 e0       	ldi	r18, 0x01	; 1
    1564:	82 1a       	sub	r8, r18
    1566:	91 08       	sbc	r9, r1
    1568:	81 14       	cp	r8, r1
    156a:	91 04       	cpc	r9, r1
    156c:	71 f7       	brne	.-36     	; 0x154a <vfprintf+0x1a4>
    156e:	e8 c0       	rjmp	.+464    	; 0x1740 <vfprintf+0x39a>
    1570:	84 36       	cpi	r24, 0x64	; 100
    1572:	11 f0       	breq	.+4      	; 0x1578 <vfprintf+0x1d2>
    1574:	89 36       	cpi	r24, 0x69	; 105
    1576:	41 f5       	brne	.+80     	; 0x15c8 <vfprintf+0x222>
    1578:	f8 01       	movw	r30, r16
    157a:	37 fe       	sbrs	r3, 7
    157c:	07 c0       	rjmp	.+14     	; 0x158c <vfprintf+0x1e6>
    157e:	60 81       	ld	r22, Z
    1580:	71 81       	ldd	r23, Z+1	; 0x01
    1582:	82 81       	ldd	r24, Z+2	; 0x02
    1584:	93 81       	ldd	r25, Z+3	; 0x03
    1586:	0c 5f       	subi	r16, 0xFC	; 252
    1588:	1f 4f       	sbci	r17, 0xFF	; 255
    158a:	08 c0       	rjmp	.+16     	; 0x159c <vfprintf+0x1f6>
    158c:	60 81       	ld	r22, Z
    158e:	71 81       	ldd	r23, Z+1	; 0x01
    1590:	07 2e       	mov	r0, r23
    1592:	00 0c       	add	r0, r0
    1594:	88 0b       	sbc	r24, r24
    1596:	99 0b       	sbc	r25, r25
    1598:	0e 5f       	subi	r16, 0xFE	; 254
    159a:	1f 4f       	sbci	r17, 0xFF	; 255
    159c:	f3 2d       	mov	r31, r3
    159e:	ff 76       	andi	r31, 0x6F	; 111
    15a0:	3f 2e       	mov	r3, r31
    15a2:	97 ff       	sbrs	r25, 7
    15a4:	09 c0       	rjmp	.+18     	; 0x15b8 <vfprintf+0x212>
    15a6:	90 95       	com	r25
    15a8:	80 95       	com	r24
    15aa:	70 95       	com	r23
    15ac:	61 95       	neg	r22
    15ae:	7f 4f       	sbci	r23, 0xFF	; 255
    15b0:	8f 4f       	sbci	r24, 0xFF	; 255
    15b2:	9f 4f       	sbci	r25, 0xFF	; 255
    15b4:	f0 68       	ori	r31, 0x80	; 128
    15b6:	3f 2e       	mov	r3, r31
    15b8:	2a e0       	ldi	r18, 0x0A	; 10
    15ba:	30 e0       	ldi	r19, 0x00	; 0
    15bc:	a3 01       	movw	r20, r6
    15be:	0e 94 06 0c 	call	0x180c	; 0x180c <__ultoa_invert>
    15c2:	88 2e       	mov	r8, r24
    15c4:	86 18       	sub	r8, r6
    15c6:	45 c0       	rjmp	.+138    	; 0x1652 <vfprintf+0x2ac>
    15c8:	85 37       	cpi	r24, 0x75	; 117
    15ca:	31 f4       	brne	.+12     	; 0x15d8 <vfprintf+0x232>
    15cc:	23 2d       	mov	r18, r3
    15ce:	2f 7e       	andi	r18, 0xEF	; 239
    15d0:	b2 2e       	mov	r11, r18
    15d2:	2a e0       	ldi	r18, 0x0A	; 10
    15d4:	30 e0       	ldi	r19, 0x00	; 0
    15d6:	25 c0       	rjmp	.+74     	; 0x1622 <vfprintf+0x27c>
    15d8:	93 2d       	mov	r25, r3
    15da:	99 7f       	andi	r25, 0xF9	; 249
    15dc:	b9 2e       	mov	r11, r25
    15de:	8f 36       	cpi	r24, 0x6F	; 111
    15e0:	c1 f0       	breq	.+48     	; 0x1612 <vfprintf+0x26c>
    15e2:	18 f4       	brcc	.+6      	; 0x15ea <vfprintf+0x244>
    15e4:	88 35       	cpi	r24, 0x58	; 88
    15e6:	79 f0       	breq	.+30     	; 0x1606 <vfprintf+0x260>
    15e8:	b5 c0       	rjmp	.+362    	; 0x1754 <vfprintf+0x3ae>
    15ea:	80 37       	cpi	r24, 0x70	; 112
    15ec:	19 f0       	breq	.+6      	; 0x15f4 <vfprintf+0x24e>
    15ee:	88 37       	cpi	r24, 0x78	; 120
    15f0:	21 f0       	breq	.+8      	; 0x15fa <vfprintf+0x254>
    15f2:	b0 c0       	rjmp	.+352    	; 0x1754 <vfprintf+0x3ae>
    15f4:	e9 2f       	mov	r30, r25
    15f6:	e0 61       	ori	r30, 0x10	; 16
    15f8:	be 2e       	mov	r11, r30
    15fa:	b4 fe       	sbrs	r11, 4
    15fc:	0d c0       	rjmp	.+26     	; 0x1618 <vfprintf+0x272>
    15fe:	fb 2d       	mov	r31, r11
    1600:	f4 60       	ori	r31, 0x04	; 4
    1602:	bf 2e       	mov	r11, r31
    1604:	09 c0       	rjmp	.+18     	; 0x1618 <vfprintf+0x272>
    1606:	34 fe       	sbrs	r3, 4
    1608:	0a c0       	rjmp	.+20     	; 0x161e <vfprintf+0x278>
    160a:	29 2f       	mov	r18, r25
    160c:	26 60       	ori	r18, 0x06	; 6
    160e:	b2 2e       	mov	r11, r18
    1610:	06 c0       	rjmp	.+12     	; 0x161e <vfprintf+0x278>
    1612:	28 e0       	ldi	r18, 0x08	; 8
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	05 c0       	rjmp	.+10     	; 0x1622 <vfprintf+0x27c>
    1618:	20 e1       	ldi	r18, 0x10	; 16
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	02 c0       	rjmp	.+4      	; 0x1622 <vfprintf+0x27c>
    161e:	20 e1       	ldi	r18, 0x10	; 16
    1620:	32 e0       	ldi	r19, 0x02	; 2
    1622:	f8 01       	movw	r30, r16
    1624:	b7 fe       	sbrs	r11, 7
    1626:	07 c0       	rjmp	.+14     	; 0x1636 <vfprintf+0x290>
    1628:	60 81       	ld	r22, Z
    162a:	71 81       	ldd	r23, Z+1	; 0x01
    162c:	82 81       	ldd	r24, Z+2	; 0x02
    162e:	93 81       	ldd	r25, Z+3	; 0x03
    1630:	0c 5f       	subi	r16, 0xFC	; 252
    1632:	1f 4f       	sbci	r17, 0xFF	; 255
    1634:	06 c0       	rjmp	.+12     	; 0x1642 <vfprintf+0x29c>
    1636:	60 81       	ld	r22, Z
    1638:	71 81       	ldd	r23, Z+1	; 0x01
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	0e 5f       	subi	r16, 0xFE	; 254
    1640:	1f 4f       	sbci	r17, 0xFF	; 255
    1642:	a3 01       	movw	r20, r6
    1644:	0e 94 06 0c 	call	0x180c	; 0x180c <__ultoa_invert>
    1648:	88 2e       	mov	r8, r24
    164a:	86 18       	sub	r8, r6
    164c:	fb 2d       	mov	r31, r11
    164e:	ff 77       	andi	r31, 0x7F	; 127
    1650:	3f 2e       	mov	r3, r31
    1652:	36 fe       	sbrs	r3, 6
    1654:	0d c0       	rjmp	.+26     	; 0x1670 <vfprintf+0x2ca>
    1656:	23 2d       	mov	r18, r3
    1658:	2e 7f       	andi	r18, 0xFE	; 254
    165a:	a2 2e       	mov	r10, r18
    165c:	89 14       	cp	r8, r9
    165e:	58 f4       	brcc	.+22     	; 0x1676 <vfprintf+0x2d0>
    1660:	34 fe       	sbrs	r3, 4
    1662:	0b c0       	rjmp	.+22     	; 0x167a <vfprintf+0x2d4>
    1664:	32 fc       	sbrc	r3, 2
    1666:	09 c0       	rjmp	.+18     	; 0x167a <vfprintf+0x2d4>
    1668:	83 2d       	mov	r24, r3
    166a:	8e 7e       	andi	r24, 0xEE	; 238
    166c:	a8 2e       	mov	r10, r24
    166e:	05 c0       	rjmp	.+10     	; 0x167a <vfprintf+0x2d4>
    1670:	b8 2c       	mov	r11, r8
    1672:	a3 2c       	mov	r10, r3
    1674:	03 c0       	rjmp	.+6      	; 0x167c <vfprintf+0x2d6>
    1676:	b8 2c       	mov	r11, r8
    1678:	01 c0       	rjmp	.+2      	; 0x167c <vfprintf+0x2d6>
    167a:	b9 2c       	mov	r11, r9
    167c:	a4 fe       	sbrs	r10, 4
    167e:	0f c0       	rjmp	.+30     	; 0x169e <vfprintf+0x2f8>
    1680:	fe 01       	movw	r30, r28
    1682:	e8 0d       	add	r30, r8
    1684:	f1 1d       	adc	r31, r1
    1686:	80 81       	ld	r24, Z
    1688:	80 33       	cpi	r24, 0x30	; 48
    168a:	21 f4       	brne	.+8      	; 0x1694 <vfprintf+0x2ee>
    168c:	9a 2d       	mov	r25, r10
    168e:	99 7e       	andi	r25, 0xE9	; 233
    1690:	a9 2e       	mov	r10, r25
    1692:	09 c0       	rjmp	.+18     	; 0x16a6 <vfprintf+0x300>
    1694:	a2 fe       	sbrs	r10, 2
    1696:	06 c0       	rjmp	.+12     	; 0x16a4 <vfprintf+0x2fe>
    1698:	b3 94       	inc	r11
    169a:	b3 94       	inc	r11
    169c:	04 c0       	rjmp	.+8      	; 0x16a6 <vfprintf+0x300>
    169e:	8a 2d       	mov	r24, r10
    16a0:	86 78       	andi	r24, 0x86	; 134
    16a2:	09 f0       	breq	.+2      	; 0x16a6 <vfprintf+0x300>
    16a4:	b3 94       	inc	r11
    16a6:	a3 fc       	sbrc	r10, 3
    16a8:	11 c0       	rjmp	.+34     	; 0x16cc <vfprintf+0x326>
    16aa:	a0 fe       	sbrs	r10, 0
    16ac:	06 c0       	rjmp	.+12     	; 0x16ba <vfprintf+0x314>
    16ae:	b2 14       	cp	r11, r2
    16b0:	88 f4       	brcc	.+34     	; 0x16d4 <vfprintf+0x32e>
    16b2:	28 0c       	add	r2, r8
    16b4:	92 2c       	mov	r9, r2
    16b6:	9b 18       	sub	r9, r11
    16b8:	0e c0       	rjmp	.+28     	; 0x16d6 <vfprintf+0x330>
    16ba:	b2 14       	cp	r11, r2
    16bc:	60 f4       	brcc	.+24     	; 0x16d6 <vfprintf+0x330>
    16be:	b6 01       	movw	r22, r12
    16c0:	80 e2       	ldi	r24, 0x20	; 32
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    16c8:	b3 94       	inc	r11
    16ca:	f7 cf       	rjmp	.-18     	; 0x16ba <vfprintf+0x314>
    16cc:	b2 14       	cp	r11, r2
    16ce:	18 f4       	brcc	.+6      	; 0x16d6 <vfprintf+0x330>
    16d0:	2b 18       	sub	r2, r11
    16d2:	02 c0       	rjmp	.+4      	; 0x16d8 <vfprintf+0x332>
    16d4:	98 2c       	mov	r9, r8
    16d6:	21 2c       	mov	r2, r1
    16d8:	a4 fe       	sbrs	r10, 4
    16da:	10 c0       	rjmp	.+32     	; 0x16fc <vfprintf+0x356>
    16dc:	b6 01       	movw	r22, r12
    16de:	80 e3       	ldi	r24, 0x30	; 48
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    16e6:	a2 fe       	sbrs	r10, 2
    16e8:	17 c0       	rjmp	.+46     	; 0x1718 <vfprintf+0x372>
    16ea:	a1 fc       	sbrc	r10, 1
    16ec:	03 c0       	rjmp	.+6      	; 0x16f4 <vfprintf+0x34e>
    16ee:	88 e7       	ldi	r24, 0x78	; 120
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	02 c0       	rjmp	.+4      	; 0x16f8 <vfprintf+0x352>
    16f4:	88 e5       	ldi	r24, 0x58	; 88
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	b6 01       	movw	r22, r12
    16fa:	0c c0       	rjmp	.+24     	; 0x1714 <vfprintf+0x36e>
    16fc:	8a 2d       	mov	r24, r10
    16fe:	86 78       	andi	r24, 0x86	; 134
    1700:	59 f0       	breq	.+22     	; 0x1718 <vfprintf+0x372>
    1702:	a1 fe       	sbrs	r10, 1
    1704:	02 c0       	rjmp	.+4      	; 0x170a <vfprintf+0x364>
    1706:	8b e2       	ldi	r24, 0x2B	; 43
    1708:	01 c0       	rjmp	.+2      	; 0x170c <vfprintf+0x366>
    170a:	80 e2       	ldi	r24, 0x20	; 32
    170c:	a7 fc       	sbrc	r10, 7
    170e:	8d e2       	ldi	r24, 0x2D	; 45
    1710:	b6 01       	movw	r22, r12
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    1718:	89 14       	cp	r8, r9
    171a:	38 f4       	brcc	.+14     	; 0x172a <vfprintf+0x384>
    171c:	b6 01       	movw	r22, r12
    171e:	80 e3       	ldi	r24, 0x30	; 48
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    1726:	9a 94       	dec	r9
    1728:	f7 cf       	rjmp	.-18     	; 0x1718 <vfprintf+0x372>
    172a:	8a 94       	dec	r8
    172c:	f3 01       	movw	r30, r6
    172e:	e8 0d       	add	r30, r8
    1730:	f1 1d       	adc	r31, r1
    1732:	80 81       	ld	r24, Z
    1734:	b6 01       	movw	r22, r12
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    173c:	81 10       	cpse	r8, r1
    173e:	f5 cf       	rjmp	.-22     	; 0x172a <vfprintf+0x384>
    1740:	22 20       	and	r2, r2
    1742:	09 f4       	brne	.+2      	; 0x1746 <vfprintf+0x3a0>
    1744:	42 ce       	rjmp	.-892    	; 0x13ca <vfprintf+0x24>
    1746:	b6 01       	movw	r22, r12
    1748:	80 e2       	ldi	r24, 0x20	; 32
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	0e 94 ca 0b 	call	0x1794	; 0x1794 <fputc>
    1750:	2a 94       	dec	r2
    1752:	f6 cf       	rjmp	.-20     	; 0x1740 <vfprintf+0x39a>
    1754:	f6 01       	movw	r30, r12
    1756:	86 81       	ldd	r24, Z+6	; 0x06
    1758:	97 81       	ldd	r25, Z+7	; 0x07
    175a:	02 c0       	rjmp	.+4      	; 0x1760 <vfprintf+0x3ba>
    175c:	8f ef       	ldi	r24, 0xFF	; 255
    175e:	9f ef       	ldi	r25, 0xFF	; 255
    1760:	2b 96       	adiw	r28, 0x0b	; 11
    1762:	e2 e1       	ldi	r30, 0x12	; 18
    1764:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__epilogue_restores__>

00001768 <strnlen_P>:
    1768:	fc 01       	movw	r30, r24
    176a:	05 90       	lpm	r0, Z+
    176c:	61 50       	subi	r22, 0x01	; 1
    176e:	70 40       	sbci	r23, 0x00	; 0
    1770:	01 10       	cpse	r0, r1
    1772:	d8 f7       	brcc	.-10     	; 0x176a <strnlen_P+0x2>
    1774:	80 95       	com	r24
    1776:	90 95       	com	r25
    1778:	8e 0f       	add	r24, r30
    177a:	9f 1f       	adc	r25, r31
    177c:	08 95       	ret

0000177e <strnlen>:
    177e:	fc 01       	movw	r30, r24
    1780:	61 50       	subi	r22, 0x01	; 1
    1782:	70 40       	sbci	r23, 0x00	; 0
    1784:	01 90       	ld	r0, Z+
    1786:	01 10       	cpse	r0, r1
    1788:	d8 f7       	brcc	.-10     	; 0x1780 <strnlen+0x2>
    178a:	80 95       	com	r24
    178c:	90 95       	com	r25
    178e:	8e 0f       	add	r24, r30
    1790:	9f 1f       	adc	r25, r31
    1792:	08 95       	ret

00001794 <fputc>:
    1794:	0f 93       	push	r16
    1796:	1f 93       	push	r17
    1798:	cf 93       	push	r28
    179a:	df 93       	push	r29
    179c:	fb 01       	movw	r30, r22
    179e:	23 81       	ldd	r18, Z+3	; 0x03
    17a0:	21 fd       	sbrc	r18, 1
    17a2:	03 c0       	rjmp	.+6      	; 0x17aa <fputc+0x16>
    17a4:	8f ef       	ldi	r24, 0xFF	; 255
    17a6:	9f ef       	ldi	r25, 0xFF	; 255
    17a8:	2c c0       	rjmp	.+88     	; 0x1802 <fputc+0x6e>
    17aa:	22 ff       	sbrs	r18, 2
    17ac:	16 c0       	rjmp	.+44     	; 0x17da <fputc+0x46>
    17ae:	46 81       	ldd	r20, Z+6	; 0x06
    17b0:	57 81       	ldd	r21, Z+7	; 0x07
    17b2:	24 81       	ldd	r18, Z+4	; 0x04
    17b4:	35 81       	ldd	r19, Z+5	; 0x05
    17b6:	42 17       	cp	r20, r18
    17b8:	53 07       	cpc	r21, r19
    17ba:	44 f4       	brge	.+16     	; 0x17cc <fputc+0x38>
    17bc:	a0 81       	ld	r26, Z
    17be:	b1 81       	ldd	r27, Z+1	; 0x01
    17c0:	9d 01       	movw	r18, r26
    17c2:	2f 5f       	subi	r18, 0xFF	; 255
    17c4:	3f 4f       	sbci	r19, 0xFF	; 255
    17c6:	31 83       	std	Z+1, r19	; 0x01
    17c8:	20 83       	st	Z, r18
    17ca:	8c 93       	st	X, r24
    17cc:	26 81       	ldd	r18, Z+6	; 0x06
    17ce:	37 81       	ldd	r19, Z+7	; 0x07
    17d0:	2f 5f       	subi	r18, 0xFF	; 255
    17d2:	3f 4f       	sbci	r19, 0xFF	; 255
    17d4:	37 83       	std	Z+7, r19	; 0x07
    17d6:	26 83       	std	Z+6, r18	; 0x06
    17d8:	14 c0       	rjmp	.+40     	; 0x1802 <fputc+0x6e>
    17da:	8b 01       	movw	r16, r22
    17dc:	ec 01       	movw	r28, r24
    17de:	fb 01       	movw	r30, r22
    17e0:	00 84       	ldd	r0, Z+8	; 0x08
    17e2:	f1 85       	ldd	r31, Z+9	; 0x09
    17e4:	e0 2d       	mov	r30, r0
    17e6:	09 95       	icall
    17e8:	89 2b       	or	r24, r25
    17ea:	e1 f6       	brne	.-72     	; 0x17a4 <fputc+0x10>
    17ec:	d8 01       	movw	r26, r16
    17ee:	16 96       	adiw	r26, 0x06	; 6
    17f0:	8d 91       	ld	r24, X+
    17f2:	9c 91       	ld	r25, X
    17f4:	17 97       	sbiw	r26, 0x07	; 7
    17f6:	01 96       	adiw	r24, 0x01	; 1
    17f8:	17 96       	adiw	r26, 0x07	; 7
    17fa:	9c 93       	st	X, r25
    17fc:	8e 93       	st	-X, r24
    17fe:	16 97       	sbiw	r26, 0x06	; 6
    1800:	ce 01       	movw	r24, r28
    1802:	df 91       	pop	r29
    1804:	cf 91       	pop	r28
    1806:	1f 91       	pop	r17
    1808:	0f 91       	pop	r16
    180a:	08 95       	ret

0000180c <__ultoa_invert>:
    180c:	fa 01       	movw	r30, r20
    180e:	aa 27       	eor	r26, r26
    1810:	28 30       	cpi	r18, 0x08	; 8
    1812:	51 f1       	breq	.+84     	; 0x1868 <__ultoa_invert+0x5c>
    1814:	20 31       	cpi	r18, 0x10	; 16
    1816:	81 f1       	breq	.+96     	; 0x1878 <__ultoa_invert+0x6c>
    1818:	e8 94       	clt
    181a:	6f 93       	push	r22
    181c:	6e 7f       	andi	r22, 0xFE	; 254
    181e:	6e 5f       	subi	r22, 0xFE	; 254
    1820:	7f 4f       	sbci	r23, 0xFF	; 255
    1822:	8f 4f       	sbci	r24, 0xFF	; 255
    1824:	9f 4f       	sbci	r25, 0xFF	; 255
    1826:	af 4f       	sbci	r26, 0xFF	; 255
    1828:	b1 e0       	ldi	r27, 0x01	; 1
    182a:	3e d0       	rcall	.+124    	; 0x18a8 <__ultoa_invert+0x9c>
    182c:	b4 e0       	ldi	r27, 0x04	; 4
    182e:	3c d0       	rcall	.+120    	; 0x18a8 <__ultoa_invert+0x9c>
    1830:	67 0f       	add	r22, r23
    1832:	78 1f       	adc	r23, r24
    1834:	89 1f       	adc	r24, r25
    1836:	9a 1f       	adc	r25, r26
    1838:	a1 1d       	adc	r26, r1
    183a:	68 0f       	add	r22, r24
    183c:	79 1f       	adc	r23, r25
    183e:	8a 1f       	adc	r24, r26
    1840:	91 1d       	adc	r25, r1
    1842:	a1 1d       	adc	r26, r1
    1844:	6a 0f       	add	r22, r26
    1846:	71 1d       	adc	r23, r1
    1848:	81 1d       	adc	r24, r1
    184a:	91 1d       	adc	r25, r1
    184c:	a1 1d       	adc	r26, r1
    184e:	20 d0       	rcall	.+64     	; 0x1890 <__ultoa_invert+0x84>
    1850:	09 f4       	brne	.+2      	; 0x1854 <__ultoa_invert+0x48>
    1852:	68 94       	set
    1854:	3f 91       	pop	r19
    1856:	2a e0       	ldi	r18, 0x0A	; 10
    1858:	26 9f       	mul	r18, r22
    185a:	11 24       	eor	r1, r1
    185c:	30 19       	sub	r19, r0
    185e:	30 5d       	subi	r19, 0xD0	; 208
    1860:	31 93       	st	Z+, r19
    1862:	de f6       	brtc	.-74     	; 0x181a <__ultoa_invert+0xe>
    1864:	cf 01       	movw	r24, r30
    1866:	08 95       	ret
    1868:	46 2f       	mov	r20, r22
    186a:	47 70       	andi	r20, 0x07	; 7
    186c:	40 5d       	subi	r20, 0xD0	; 208
    186e:	41 93       	st	Z+, r20
    1870:	b3 e0       	ldi	r27, 0x03	; 3
    1872:	0f d0       	rcall	.+30     	; 0x1892 <__ultoa_invert+0x86>
    1874:	c9 f7       	brne	.-14     	; 0x1868 <__ultoa_invert+0x5c>
    1876:	f6 cf       	rjmp	.-20     	; 0x1864 <__ultoa_invert+0x58>
    1878:	46 2f       	mov	r20, r22
    187a:	4f 70       	andi	r20, 0x0F	; 15
    187c:	40 5d       	subi	r20, 0xD0	; 208
    187e:	4a 33       	cpi	r20, 0x3A	; 58
    1880:	18 f0       	brcs	.+6      	; 0x1888 <__ultoa_invert+0x7c>
    1882:	49 5d       	subi	r20, 0xD9	; 217
    1884:	31 fd       	sbrc	r19, 1
    1886:	40 52       	subi	r20, 0x20	; 32
    1888:	41 93       	st	Z+, r20
    188a:	02 d0       	rcall	.+4      	; 0x1890 <__ultoa_invert+0x84>
    188c:	a9 f7       	brne	.-22     	; 0x1878 <__ultoa_invert+0x6c>
    188e:	ea cf       	rjmp	.-44     	; 0x1864 <__ultoa_invert+0x58>
    1890:	b4 e0       	ldi	r27, 0x04	; 4
    1892:	a6 95       	lsr	r26
    1894:	97 95       	ror	r25
    1896:	87 95       	ror	r24
    1898:	77 95       	ror	r23
    189a:	67 95       	ror	r22
    189c:	ba 95       	dec	r27
    189e:	c9 f7       	brne	.-14     	; 0x1892 <__ultoa_invert+0x86>
    18a0:	00 97       	sbiw	r24, 0x00	; 0
    18a2:	61 05       	cpc	r22, r1
    18a4:	71 05       	cpc	r23, r1
    18a6:	08 95       	ret
    18a8:	9b 01       	movw	r18, r22
    18aa:	ac 01       	movw	r20, r24
    18ac:	0a 2e       	mov	r0, r26
    18ae:	06 94       	lsr	r0
    18b0:	57 95       	ror	r21
    18b2:	47 95       	ror	r20
    18b4:	37 95       	ror	r19
    18b6:	27 95       	ror	r18
    18b8:	ba 95       	dec	r27
    18ba:	c9 f7       	brne	.-14     	; 0x18ae <__ultoa_invert+0xa2>
    18bc:	62 0f       	add	r22, r18
    18be:	73 1f       	adc	r23, r19
    18c0:	84 1f       	adc	r24, r20
    18c2:	95 1f       	adc	r25, r21
    18c4:	a0 1d       	adc	r26, r0
    18c6:	08 95       	ret

000018c8 <__prologue_saves__>:
    18c8:	2f 92       	push	r2
    18ca:	3f 92       	push	r3
    18cc:	4f 92       	push	r4
    18ce:	5f 92       	push	r5
    18d0:	6f 92       	push	r6
    18d2:	7f 92       	push	r7
    18d4:	8f 92       	push	r8
    18d6:	9f 92       	push	r9
    18d8:	af 92       	push	r10
    18da:	bf 92       	push	r11
    18dc:	cf 92       	push	r12
    18de:	df 92       	push	r13
    18e0:	ef 92       	push	r14
    18e2:	ff 92       	push	r15
    18e4:	0f 93       	push	r16
    18e6:	1f 93       	push	r17
    18e8:	cf 93       	push	r28
    18ea:	df 93       	push	r29
    18ec:	cd b7       	in	r28, 0x3d	; 61
    18ee:	de b7       	in	r29, 0x3e	; 62
    18f0:	ca 1b       	sub	r28, r26
    18f2:	db 0b       	sbc	r29, r27
    18f4:	0f b6       	in	r0, 0x3f	; 63
    18f6:	f8 94       	cli
    18f8:	de bf       	out	0x3e, r29	; 62
    18fa:	0f be       	out	0x3f, r0	; 63
    18fc:	cd bf       	out	0x3d, r28	; 61
    18fe:	09 94       	ijmp

00001900 <__epilogue_restores__>:
    1900:	2a 88       	ldd	r2, Y+18	; 0x12
    1902:	39 88       	ldd	r3, Y+17	; 0x11
    1904:	48 88       	ldd	r4, Y+16	; 0x10
    1906:	5f 84       	ldd	r5, Y+15	; 0x0f
    1908:	6e 84       	ldd	r6, Y+14	; 0x0e
    190a:	7d 84       	ldd	r7, Y+13	; 0x0d
    190c:	8c 84       	ldd	r8, Y+12	; 0x0c
    190e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1910:	aa 84       	ldd	r10, Y+10	; 0x0a
    1912:	b9 84       	ldd	r11, Y+9	; 0x09
    1914:	c8 84       	ldd	r12, Y+8	; 0x08
    1916:	df 80       	ldd	r13, Y+7	; 0x07
    1918:	ee 80       	ldd	r14, Y+6	; 0x06
    191a:	fd 80       	ldd	r15, Y+5	; 0x05
    191c:	0c 81       	ldd	r16, Y+4	; 0x04
    191e:	1b 81       	ldd	r17, Y+3	; 0x03
    1920:	aa 81       	ldd	r26, Y+2	; 0x02
    1922:	b9 81       	ldd	r27, Y+1	; 0x01
    1924:	ce 0f       	add	r28, r30
    1926:	d1 1d       	adc	r29, r1
    1928:	0f b6       	in	r0, 0x3f	; 63
    192a:	f8 94       	cli
    192c:	de bf       	out	0x3e, r29	; 62
    192e:	0f be       	out	0x3f, r0	; 63
    1930:	cd bf       	out	0x3d, r28	; 61
    1932:	ed 01       	movw	r28, r26
    1934:	08 95       	ret

00001936 <_exit>:
    1936:	f8 94       	cli

00001938 <__stop_program>:
    1938:	ff cf       	rjmp	.-2      	; 0x1938 <__stop_program>
